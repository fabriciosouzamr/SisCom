// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SisCom.Infraestrutura.Data.Context;

namespace SisCom.Infraestrutura.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20220207222940_CadastroMercadorias")]
    partial class CadastroMercadorias
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SisCom.Entidade.Modelos.Almoxarifado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Almoxarifados");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Cidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoIBGE")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Estado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("PaisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ad2c4330-6ed6-4bff-87b9-fb48f06b7355"),
                            Codigo = "AC",
                            Nome = "Acre",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a63ada3a-6073-4aee-b609-a089522cfbf5"),
                            Codigo = "AL",
                            Nome = "Alagoas",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("49ed77db-5cfb-4fd4-9c76-df8e1787c3f8"),
                            Codigo = "AP",
                            Nome = "Amapá",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f46b8cd5-c6b1-462e-8ee5-a23a942970e9"),
                            Codigo = "AM",
                            Nome = "Amazonas",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f3e7ffc6-467f-404b-9bf0-ed8842f9f739"),
                            Codigo = "BA",
                            Nome = "Bahia",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("960288b4-3d57-47da-aa26-5a3b3445652a"),
                            Codigo = "CE",
                            Nome = "Ceará",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4231c998-2425-4ff9-bed3-1b8f0cee38f8"),
                            Codigo = "DF",
                            Nome = "Distrito Federal",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("50fb081a-939d-45e2-9ab9-b426e5c6592c"),
                            Codigo = "ES",
                            Nome = "Espirito Santo",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("adfc2af9-21f7-4c96-bc07-26dbf57a9b92"),
                            Codigo = "GO",
                            Nome = "Goias",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3af3ef90-4be5-43b3-8fd2-3d79ad0236f1"),
                            Codigo = "MA",
                            Nome = "Maranhão",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9fdd40f6-d339-4a42-8283-0bc16568df56"),
                            Codigo = "MS",
                            Nome = "Mato Grosso do Sul",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("78c3d90e-0c0b-4133-aa9d-efdd383d1787"),
                            Codigo = "MT",
                            Nome = "Mato Grosso",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("316299c0-f09f-4564-80e4-0a9b4fb3126e"),
                            Codigo = "MG",
                            Nome = "Minas Gerais",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("10de653b-80a1-4fd8-ae27-41f24236d875"),
                            Codigo = "PA",
                            Nome = "Pará",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3505aecd-b180-4b55-a52f-aaebca7e694c"),
                            Codigo = "PB",
                            Nome = "Paraíba",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("258208d1-3bf0-4c89-954d-3bcbb3dd1744"),
                            Codigo = "PR",
                            Nome = "Paraná",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("91f27bd9-01ec-4017-a0cc-7d64573c7d3d"),
                            Codigo = "PE",
                            Nome = "Pernambuco",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4bae038c-8360-4c72-becd-b67ac5ecfd29"),
                            Codigo = "PI",
                            Nome = "Piauí",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("92701b58-91b6-4fe8-b53e-9b20aee7190f"),
                            Codigo = "RJ",
                            Nome = "Rio de Janeiro",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b8b49a76-0495-4c6f-8cd2-7821b2a359b6"),
                            Codigo = "RN",
                            Nome = "Rio Grande do Norte",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1eff192d-655c-4c49-845e-195dce5f5469"),
                            Codigo = "RS",
                            Nome = "Rio Grande do Sul",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ae34808a-ae8c-4b3e-b66b-63688a2b5a8b"),
                            Codigo = "RO",
                            Nome = "Rondônia",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("dcb12e9b-9c99-4e9a-b7dc-4229547c4f36"),
                            Codigo = "RR",
                            Nome = "Roraima",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("506d2aa6-6caa-483a-b6df-a5e0e5157e33"),
                            Codigo = "SC",
                            Nome = "Santa Catarina",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("dc3af8d3-f287-44d6-9188-f867608a3caf"),
                            Codigo = "SP",
                            Nome = "São Paulo",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("55e5fb6c-ee9e-4575-afed-6b4e4cb67972"),
                            Codigo = "SE",
                            Nome = "Sergipe",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a49e7adb-9fc9-48f1-93b7-e7df032a8fc5"),
                            Codigo = "EX",
                            Nome = "Exterior",
                            PaisId = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Estoque", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlmoxarifadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("QuantidadeBloqueada")
                        .HasColumnType("float");

                    b.Property<double>("QuantidadeEmEstoque")
                        .HasColumnType("float");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlmoxarifadoId");

                    b.HasIndex("MercadoriaId");

                    b.ToTable("Estoques");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.GrupoCFOP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoOperacaoCFOP")
                        .HasColumnType("int");

                    b.Property<Guid>("TipoOperacaoCFOPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GrupoCFOPs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c71222a1-5995-4639-a4dd-10e417e80757"),
                            Nome = "1.000 - ENTRADAS OU AQUISIÇÕES DE SERVIÇOS DO ESTADO",
                            TipoOperacaoCFOP = 1,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("024a5d61-71b1-4e6f-ad9c-22c615b28672"),
                            Nome = "2.000 - ENTRADAS OU AQUISIÇÕES DE SERVIÇOS DE OUTROS ESTADOS",
                            TipoOperacaoCFOP = 2,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("59b25494-31dc-47b1-85c7-91596f21bf7c"),
                            Nome = "3.000 - ENTRADAS OU AQUISIÇÕES DE SERVIÇOS DO EXTERIOR",
                            TipoOperacaoCFOP = 3,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d539a6f2-1126-40d1-b5f2-061251360ea0"),
                            Nome = "5.000 - SAÍDAS OU PRESTAÇÕES DE SERVIÇOS PARA O ESTADO",
                            TipoOperacaoCFOP = 5,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("74127c3d-c081-427e-9410-a88887adca4d"),
                            Nome = "6.000 - SAÍDAS OU PRESTAÇÕES DE SERVIÇOS PARA OUTROS ESTADOS",
                            TipoOperacaoCFOP = 6,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("431c0276-b0c1-43e9-8aac-3913eff95dcf"),
                            Nome = "7.000 - SAÍDAS OU PRESTAÇÕES DE SERVIÇOS PARA O EXTERIOR",
                            TipoOperacaoCFOP = 7,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.GrupoMercadoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("NaoVender")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GrupoMercadorias");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.GrupoNCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GrupoNCM");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.GrupoNaturezaReceita_CTS_PIS_COFINS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GrupoNaturezaReceita_CTS_PIS_COFINS");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Mercadoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativado")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CodigoBarra")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoFabricante")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Estoque_AlteracaoPreco")
                        .HasColumnType("datetime2");

                    b.Property<double>("Estoque_PesoBruto")
                        .HasColumnType("float");

                    b.Property<double>("Estoque_PesoLiquido")
                        .HasColumnType("float");

                    b.Property<string>("Estoque_Pratileira")
                        .HasColumnType("varchar(20)");

                    b.Property<double>("Estoque_Quantidade")
                        .HasColumnType("float");

                    b.Property<double>("Estoque_QuantidadeMinimo")
                        .HasColumnType("float");

                    b.Property<double>("Estoque_TributacaoNFCe_AliquotaICMS")
                        .HasColumnType("float");

                    b.Property<Guid>("Estoque_TributacaoNFCe_TabelaCFOPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Estoque_TributacaoNFCe_TabelaSituacaoTributariaNFCeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Estoque_TributacaoNFCe_TipoServicoFiscalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estoque_TributacaoNFCe_TipoServicoMunicipal")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("Estoque_UltimaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Estoque_UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FabricanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Fiscal_CodigoAnvisa")
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Fiscal_InformacaoAdicional")
                        .HasColumnType("varchar(200)");

                    b.Property<double>("Fiscal_NFE_COFINS_Aliquota")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFE_IPI_Aliquota")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFE_PIS_Aliquota")
                        .HasColumnType("float");

                    b.Property<Guid>("Fiscal_NFE_TabelaCST_COFINSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFE_TabelaCST_IPIId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFE_TabelaCST_PISId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_ICMSST_Aliquota")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_ICMSST_ReducaoBase")
                        .HasColumnType("float");

                    b.Property<Guid>("Fiscal_NFS_ICMSST_TabelaModalidadeDeterminacaoBCICMSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_ICMSST_ValorAdicional")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_ICMS_Deferimento")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_ICMS_ReducaoBase")
                        .HasColumnType("float");

                    b.Property<Guid>("Fiscal_NFS_ICMS_TabelaModalidadeDeterminacaoBCICMSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFS_ICMS_TabelaMotivoDesoneracaoICMSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_ICMS_ValorAdicional")
                        .HasColumnType("float");

                    b.Property<Guid>("Fiscal_NFS_IPI_TabelaCST_IPIId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFS_IPI_TabelaClasseEnquadramentoIPIId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFS_IPI_TabelaCodigoEnquadramentoIPIId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_IPI_ValorAliquota")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_PISCOFINS_COFINS_ValorAliquota")
                        .HasColumnType("float");

                    b.Property<Guid>("Fiscal_NFS_PISCOFINS_GrupoNaturezaReceitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTCOFINSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTPISId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_PISCOFINS_PIS_ValorAliquota")
                        .HasColumnType("float");

                    b.Property<Guid>("Fiscal_NFS_PISCOFINS_TabelaNaturezaReceitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_TributosEstaduais")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_TributosFederais")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_TributosMunicipais")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_TributosTotal")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_ValorTributosTotal")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_OutrosNVE")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_OutrosPMC")
                        .HasColumnType("float");

                    b.Property<Guid>("Fiscal_SPED_TabelaSpedCodigoGeneroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_SPED_TabelaSpedInformacaoAdicionalItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_SPED_TabelaSpedTipoItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaANPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaBeneficioSPEDId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaCESTId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaCST_CSOSNId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaNCMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaOrigemMercadoriaServicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TipoMercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_VinculoFiscalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FotoEspecificacao_Especificacao")
                        .HasColumnType("text");

                    b.Property<byte[]>("FotoEspecificacao_Imagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FotoEspecificacao_Imagem_ContentType")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FotoEspecificacao_URL")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("FotoEspecificacao_UsarFoto")
                        .HasColumnType("bit");

                    b.Property<Guid>("GrupoMercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("NaoControlarEstoque")
                        .HasColumnType("bit");

                    b.Property<bool>("NaoVender")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Observacao")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco_CalculoPrecificacao")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_CalculoPreco")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_Comissao")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_CustoFixo")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_CustoMercadoria")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_Embalagem")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_EncFinanceiro")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_Frete")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_ICMS_Compra")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_ICMS_Fronteira")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_ICMS_Venda")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_IPI")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_ImpostoFederais")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_MargemA")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_MargemB")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_MargemC")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_MargemSugerido")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_MargemVenda")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_Marketing")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_OutrosCustos")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_PontoEquilibrio")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_PrecoA")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_PrecoB")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_PrecoC")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_PrecoCompra")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_PrecoSugerido")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_PrecoVenda")
                        .HasColumnType("money");

                    b.Property<bool>("Producao_Configuracao_NaoBaixarComposicaoVenda")
                        .HasColumnType("bit");

                    b.Property<int>("Producao_Configuracao_ValidadeDias")
                        .HasColumnType("int");

                    b.Property<Guid>("SubGrupoMercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Estoque_TributacaoNFCe_TabelaCFOPId");

                    b.HasIndex("Estoque_TributacaoNFCe_TabelaSituacaoTributariaNFCeId");

                    b.HasIndex("Estoque_TributacaoNFCe_TipoServicoFiscalId");

                    b.HasIndex("Estoque_UnidadeId");

                    b.HasIndex("FabricanteId");

                    b.HasIndex("Fiscal_NFE_TabelaCST_COFINSId");

                    b.HasIndex("Fiscal_NFE_TabelaCST_IPIId");

                    b.HasIndex("Fiscal_NFE_TabelaCST_PISId");

                    b.HasIndex("Fiscal_NFS_ICMSST_TabelaModalidadeDeterminacaoBCICMSId");

                    b.HasIndex("Fiscal_NFS_ICMS_TabelaModalidadeDeterminacaoBCICMSId");

                    b.HasIndex("Fiscal_NFS_ICMS_TabelaMotivoDesoneracaoICMSId");

                    b.HasIndex("Fiscal_NFS_IPI_TabelaCST_IPIId");

                    b.HasIndex("Fiscal_NFS_IPI_TabelaClasseEnquadramentoIPIId");

                    b.HasIndex("Fiscal_NFS_IPI_TabelaCodigoEnquadramentoIPIId");

                    b.HasIndex("Fiscal_NFS_PISCOFINS_GrupoNaturezaReceitaId");

                    b.HasIndex("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTCOFINSId");

                    b.HasIndex("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTPISId");

                    b.HasIndex("Fiscal_NFS_PISCOFINS_TabelaNaturezaReceitaId");

                    b.HasIndex("Fiscal_SPED_TabelaSpedCodigoGeneroId");

                    b.HasIndex("Fiscal_SPED_TabelaSpedInformacaoAdicionalItemId");

                    b.HasIndex("Fiscal_SPED_TabelaSpedTipoItemId");

                    b.HasIndex("Fiscal_TabelaANPId");

                    b.HasIndex("Fiscal_TabelaBeneficioSPEDId");

                    b.HasIndex("Fiscal_TabelaCESTId");

                    b.HasIndex("Fiscal_TabelaCST_CSOSNId");

                    b.HasIndex("Fiscal_TabelaNCMId");

                    b.HasIndex("Fiscal_TabelaOrigemMercadoriaServicoId");

                    b.HasIndex("Fiscal_TipoMercadoriaId");

                    b.HasIndex("Fiscal_VinculoFiscalId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("GrupoMercadoriaId");

                    b.HasIndex("SubGrupoMercadoriaId");

                    b.ToTable("Mercadorias");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.MercadoriaFornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoFonecedor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("QuantidadePorCaixa")
                        .HasColumnType("float");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("MercadoriaId");

                    b.ToTable("MercadoriaFornecedores");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Pais", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Paises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("6c4ba1ac-6225-492d-ad1d-7687cfa89e05"),
                            Nome = "Brasil",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ_CPF")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<Guid?>("CidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EMail")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("End_Bairro")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("End_CEP")
                        .HasColumnType("varchar(8)");

                    b.Property<string>("End_Logradouro")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("End_Numero")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("End_PontoReferencia")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FAX")
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Fabricante")
                        .HasColumnType("bit");

                    b.Property<bool>("Fornecedor")
                        .HasColumnType("bit");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("InscricaoMunicipal")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeContato")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NomePopular")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Representante")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Site")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Similar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Similares");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.SubGrupoMercadoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GrupoMercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GrupoMercadoriaId");

                    b.ToTable("SubGrupoMercadorias");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaANP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaANPs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaBeneficioSPED", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaBeneficioSPEDs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCEST", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("TabelaNCMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TabelaNCMId");

                    b.ToTable("TabelaCESTs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCFOP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("GrupoCFOPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GrupoCFOPId");

                    b.ToTable("TabelaCFOPs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCNAE", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaCNAEs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCST_CSOSN", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CRT")
                        .HasColumnType("int");

                    b.Property<string>("CSTEquivalente")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("DestacarICMS")
                        .HasColumnType("bit");

                    b.Property<bool>("DestacarICMSST")
                        .HasColumnType("bit");

                    b.Property<bool>("DestacarICMSSTEfetivo")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiDesoneracaoICMS")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiDiferimentoICMS")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiReducaoICMS")
                        .HasColumnType("bit");

                    b.Property<string>("ST")
                        .HasColumnType("varchar(2)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaCST_CSOSNs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCST_IPI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("DestacarIPI")
                        .HasColumnType("bit");

                    b.Property<int>("EntradaSaida")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaCST_IPIs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("826c0e7b-0c0b-4899-9610-4cf735a58707"),
                            Codigo = "00",
                            Descricao = "Entrada com Recuperação de Crédito",
                            DestacarIPI = true,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f5f6aaad-a151-41a3-8ff1-7a4a593805f5"),
                            Codigo = "01",
                            Descricao = "Entrada Tributável com Alíquota Zero",
                            DestacarIPI = false,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a05caf24-efd0-424d-882f-14e984371c6e"),
                            Codigo = "02",
                            Descricao = "Entrada Isenta",
                            DestacarIPI = false,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8c9225db-7bc5-445a-b0ae-88b1611ac9ca"),
                            Codigo = "03",
                            Descricao = "Entrada Não-Tributada",
                            DestacarIPI = false,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("acf97aff-65d7-4101-9897-8ebde36a3fa6"),
                            Codigo = "04",
                            Descricao = "Entrada Imune",
                            DestacarIPI = false,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("920389f1-7931-4d88-828b-59c8b7b0f526"),
                            Codigo = "05",
                            Descricao = "Entrada com Suspensão",
                            DestacarIPI = false,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("62ca2fc6-7a38-4991-a0bb-040697f5c544"),
                            Codigo = "49",
                            Descricao = "Outras Entradas",
                            DestacarIPI = true,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6ae0378e-c2d1-4017-b829-d8e8684e03cd"),
                            Codigo = "50",
                            Descricao = "Saída Tributada",
                            DestacarIPI = true,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("537ca43c-8ee4-4f52-bb17-672c7e792675"),
                            Codigo = "51",
                            Descricao = "Saída Tributável com Alíquota Zero",
                            DestacarIPI = false,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f32b1200-9c3c-4743-8b35-cf6489511b79"),
                            Codigo = "52",
                            Descricao = "Saída Isenta",
                            DestacarIPI = false,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e68f2eb0-d044-4c0a-81fa-82315b69700d"),
                            Codigo = "53",
                            Descricao = "Saída Não-Tributada",
                            DestacarIPI = false,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b0128c87-9377-4ef8-b8fa-c2d8fe157add"),
                            Codigo = "54",
                            Descricao = "Saída Imune",
                            DestacarIPI = false,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b551a356-50e8-4afb-809a-28268da7ca49"),
                            Codigo = "55",
                            Descricao = "Saída com Suspensão",
                            DestacarIPI = false,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6d1e5803-ec26-4a88-a055-e69cf50854e3"),
                            Codigo = "99",
                            Descricao = "Outras Saídas",
                            DestacarIPI = true,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCST_PIS_COFINS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("DestacarPIS_COFINS")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UsaNaEntrada")
                        .HasColumnType("bit");

                    b.Property<bool>("UsaNaSaida")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TabelaCST_PIS_COFINSs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9844509e-9df3-4b7f-b410-03e253758886"),
                            Codigo = "01",
                            Descricao = "Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo/não cumulativo))",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("70608042-f7a4-4ef2-a610-a6be73793ba7"),
                            Codigo = "02",
                            Descricao = "Operação Tributável (base de cálculo = valor da operação (alíquota diferenciada))",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("2bb9b5e9-6b9f-43ba-8678-72babf4b7fb7"),
                            Codigo = "03",
                            Descricao = "Operação Tributável (base de cálculo = quantidade vendida x alíquota por unidade de produto)",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("c36d3efb-c594-4b65-ab81-c2c19a49da1c"),
                            Codigo = "04",
                            Descricao = "Operação Tributável (tributação monofásica (alíquota zero))",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("76a63e9f-682d-43ce-b5a7-4a6d65d00196"),
                            Codigo = "05",
                            Descricao = "Operação Tributável por Substituição Tributária",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("6f24530f-933f-4c5d-aaa6-319f94a37b0f"),
                            Codigo = "06",
                            Descricao = "Operação Tributável (alíquota zero)",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("bd0f0a25-7cc3-4899-94ff-5dbb5f08d7ce"),
                            Codigo = "07",
                            Descricao = "Operação Isenta da Contribuição",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("ffc82589-c781-4110-b551-73a64a6e993a"),
                            Codigo = "08",
                            Descricao = "Operação Sem Incidência da Contribuição",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("bdf84b24-b4b5-4d52-8286-18cdc1810d3f"),
                            Codigo = "09",
                            Descricao = "Operação com Suspensão da Contribuição",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("97f66672-de13-41cc-a888-b241bd565144"),
                            Codigo = "49",
                            Descricao = "Outras Operações de Saída",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("afc8766b-e119-4ae0-a7d4-73f7bbfa5db9"),
                            Codigo = "50",
                            Descricao = "Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Tributada no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("f415962a-77c9-4b74-b9ab-7eb9ba525254"),
                            Codigo = "51",
                            Descricao = "Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Não-Tributada no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("a9d4917b-91d4-45e5-8c9a-4985863e5467"),
                            Codigo = "52",
                            Descricao = "Operação com Direito a Crédito - Vinculada Exclusivamente a Receita de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("f7dadbe5-fb15-4baa-b517-4dd2293a7b02"),
                            Codigo = "53",
                            Descricao = "Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não - Tributadas no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("3efd8f83-51c1-41ab-ae8d-856675137db4"),
                            Codigo = "54",
                            Descricao = "Operação com Direito a Crédito - Vinculada a Receitas Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("8577744b-c794-4b45-9c7c-3f09b6b6aa2a"),
                            Codigo = "55",
                            Descricao = "Operação com Direito a Crédito - Vinculada a Receitas Não Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("db37e539-d770-4052-a0c2-dab668727017"),
                            Codigo = "56",
                            Descricao = "Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não - Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("12c7142f-7775-42fc-a9f7-658d170aaf3f"),
                            Codigo = "60",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada Exclusivamente a Receita Tributada no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("d1a1d37c-d31a-4923-8206-2bc304a161f4"),
                            Codigo = "61",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada Exclusivamente a Receita Não - Tributada no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("e764afc0-ba3a-4a51-baae-3e65eee40049"),
                            Codigo = "62",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada Exclusivamente a Receita de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("108123b9-5ee4-43fa-8813-5243f84dee9e"),
                            Codigo = "63",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("226441e0-8b26-4ace-82d6-1640ced3ecec"),
                            Codigo = "64",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada a Receitas Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("4c43efa5-1510-4300-9a66-31c732e08874"),
                            Codigo = "65",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("715eca90-359a-4c00-b1b0-70efc93c046f"),
                            Codigo = "66",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("2666d449-f3ec-4b2b-8785-7d8f9ca2e707"),
                            Codigo = "67",
                            Descricao = "Crédito Presumido -Outras Operações",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("edb571c9-8a8d-49aa-8244-3b22c5f28f3b"),
                            Codigo = "70",
                            Descricao = "Operação de Aquisição sem Direito a Crédito",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("f50c21d0-fe33-4fa2-be17-ac6b970a0577"),
                            Codigo = "71",
                            Descricao = "Operação de Aquisição com Isenção",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("f602af8b-1010-4c76-83f8-a5e59bde4133"),
                            Codigo = "72",
                            Descricao = "Operação de Aquisição com Suspensão",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("f429489a-3ed4-4dca-b970-311ce492c17f"),
                            Codigo = "73",
                            Descricao = "Operação de Aquisição a Alíquota Zero",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("e7e1f0b1-005c-4a7c-adbb-d95f91aee351"),
                            Codigo = "74",
                            Descricao = "Operação de Aquisição sem Incidência da Contribuição",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("a1aafeb6-1c1c-40e4-b2d8-d43d3a1067ac"),
                            Codigo = "75",
                            Descricao = "Operação de Aquisição por Substituição Tributária",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("4adf26c9-6b53-4883-99d7-e0de2f15a82f"),
                            Codigo = "98",
                            Descricao = "Outras Operações de Entrada",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("c6dfa821-a09a-4501-aed3-b9359a1958fc"),
                            Codigo = "99",
                            Descricao = "Outras Operações",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = true
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaClasseEnquadramentoIPI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaClasseEnquadramentoIPIs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCodigoEnquadramentoIPI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("GrupoTabelaCodigoEnquadramentoIPI")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaCodigoEnquadramentoIPIs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaModalidadeDeterminacaoBCICMS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("TipoModalidadeDeterminacaoBCICMS")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaModalidadeDeterminacaoBCICMSs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaMotivoDesoneracaoICMS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("TabelaCST_CSOSNId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TabelaCST_CSOSNId");

                    b.ToTable("TabelaMotivoDesoneracaoICMSs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaNCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("GrupoNCMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GrupoNCMId");

                    b.ToTable("TabelaNCMs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaNaturezaReceita_CTS_PIS_COFINS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("GrupoNaturezaReceita_CTS_PIS_COFINSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GrupoNaturezaReceita_CTS_PIS_COFINSId");

                    b.ToTable("TabelaNaturezaReceita_CTS_PIS_COFINS");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaOrigemMercadoriaServico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaOrigemMercadoriaServicos");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaSituacaoTributariaNFCe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaSituacaoTributariaNFCes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("69b5005a-4daa-4bd0-8436-ea4a81f7aae9"),
                            Codigo = "01",
                            Descricao = "Normal(% TRIBUTADO)",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a5f195e4-c22c-47c4-bee3-6e246b35c333"),
                            Codigo = "FF",
                            Descricao = "Substituição",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("606093b1-6829-41fa-b5a5-6d0b280ddc90"),
                            Codigo = "II",
                            Descricao = "Isento",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ac4050eb-39ca-4f2f-89f0-881cf983ec43"),
                            Codigo = "NN",
                            Descricao = "Não Incidente",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaSpedCodigoGenero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaSpedCodigoGeneros");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaSpedInformacaoAdicionalItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaSpedInformacaoAdicionalItens");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaSpedTipoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaSpedTipoItems");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TipoMercadoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TipoMercadorias");

                    b.HasData(
                        new
                        {
                            Id = new Guid("308fb9a9-da5d-450b-aae9-39e05a4568db"),
                            Nome = "VEÍCULO",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a2908802-b160-406f-92e8-263c77d38b4f"),
                            Nome = "COMBUSTÍVEL",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("99ca99a2-8cc0-49b0-b1e8-677954769275"),
                            Nome = "MEDICAMENTO",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7cc18d07-67cc-4493-a086-6e548cfe7167"),
                            Nome = "ARMAMENTO",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TipoServicoFiscal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("TabelaCNAEId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TabelaCNAEId");

                    b.ToTable("TipoServicoFiscais");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.UnidadeMedida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UnidadeMedidas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e61d7d37-5256-4e82-9e9e-d9019c58d2a4"),
                            Codigo = "UND",
                            Nome = "Unidade",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a263e1a5-8fe8-4a87-bccc-42a0f4450dce"),
                            Codigo = "CXA",
                            Nome = "Caixa",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b41276fe-c11b-4a85-9597-a0ae0d7eff2d"),
                            Codigo = "PCA",
                            Nome = "Peca",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4276b984-230e-479e-a94f-e0676acda5b8"),
                            Codigo = "MTR",
                            Nome = "Metro",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e7ec7811-fa37-4ec3-9d79-38bcfdb71c23"),
                            Codigo = "KG",
                            Nome = "Kilograma",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("21c4d228-59e2-4809-b1e2-72eaac11c3fd"),
                            Codigo = "LTR",
                            Nome = "Litro ",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("495b154f-7d61-4810-8d00-65b5bc7561f8"),
                            Codigo = "PCT",
                            Nome = "Pacote",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("59ace6e2-353c-4c9b-ba95-48db036a50cb"),
                            Codigo = "SCO",
                            Nome = "Saco",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("19fbc344-df61-483e-9d24-bf5b27a51620"),
                            Codigo = "FRC",
                            Nome = "Frasco",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("70a412a6-6a94-4af0-8c02-f2cef9b7067a"),
                            Codigo = "GR",
                            Nome = "Grama",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2b37d296-c0ba-4c9e-9961-c350955b244c"),
                            Codigo = "FRD",
                            Nome = "Fardo",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.VinculoFiscal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("VinculoFiscais");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Cidade", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Estado", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Estoque", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Almoxarifado", "Almoxarifado")
                        .WithMany()
                        .HasForeignKey("AlmoxarifadoId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.Mercadoria", "Mercadoria")
                        .WithMany()
                        .HasForeignKey("MercadoriaId")
                        .IsRequired();

                    b.Navigation("Almoxarifado");

                    b.Navigation("Mercadoria");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Mercadoria", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.TabelaCFOP", "Estoque_TributacaoNFCe_TabelaCFOP")
                        .WithMany()
                        .HasForeignKey("Estoque_TributacaoNFCe_TabelaCFOPId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaSituacaoTributariaNFCe", "Estoque_TributacaoNFCe_TabelaSituacaoTributariaNFCe")
                        .WithMany()
                        .HasForeignKey("Estoque_TributacaoNFCe_TabelaSituacaoTributariaNFCeId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TipoServicoFiscal", "Estoque_TributacaoNFCe_TipoServicoFiscal")
                        .WithMany()
                        .HasForeignKey("Estoque_TributacaoNFCe_TipoServicoFiscalId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.UnidadeMedida", "Estoque_Unidade")
                        .WithMany()
                        .HasForeignKey("Estoque_UnidadeId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.Pessoa", "Fabricante")
                        .WithMany()
                        .HasForeignKey("FabricanteId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_PIS_COFINS", "Fiscal_NFE_TabelaCST_COFINS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFE_TabelaCST_COFINSId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_IPI", "Fiscal_NFE_TabelaCST_IPI")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFE_TabelaCST_IPIId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_PIS_COFINS", "Fiscal_NFE_TabelaCST_PIS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFE_TabelaCST_PISId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaModalidadeDeterminacaoBCICMS", "Fiscal_NFS_ICMSST_TabelaModalidadeDeterminacaoBCICMS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_ICMSST_TabelaModalidadeDeterminacaoBCICMSId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaModalidadeDeterminacaoBCICMS", "Fiscal_NFS_ICMS_TabelaModalidadeDeterminacaoBCICMS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_ICMS_TabelaModalidadeDeterminacaoBCICMSId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaMotivoDesoneracaoICMS", "Fiscal_NFS_ICMS_TabelaMotivoDesoneracaoICMS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_ICMS_TabelaMotivoDesoneracaoICMSId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_IPI", "Fiscal_NFS_IPI_TabelaCST_IPI")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_IPI_TabelaCST_IPIId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaClasseEnquadramentoIPI", "Fiscal_NFS_IPI_TabelaClasseEnquadramentoIPI")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_IPI_TabelaClasseEnquadramentoIPIId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCodigoEnquadramentoIPI", "Fiscal_NFS_IPI_TabelaCodigoEnquadramentoIPI")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_IPI_TabelaCodigoEnquadramentoIPIId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.GrupoNaturezaReceita_CTS_PIS_COFINS", "Fiscal_NFS_PISCOFINS_GrupoNaturezaReceita")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_PISCOFINS_GrupoNaturezaReceitaId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_PIS_COFINS", "Fiscal_NFS_PISCOFINS_PIS_TabelaCSTCOFINS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTCOFINSId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_PIS_COFINS", "Fiscal_NFS_PISCOFINS_PIS_TabelaCSTPIS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTPISId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaNaturezaReceita_CTS_PIS_COFINS", "Fiscal_NFS_PISCOFINS_TabelaNaturezaReceita")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_PISCOFINS_TabelaNaturezaReceitaId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaSpedCodigoGenero", "Fiscal_SPED_TabelaSpedCodigoGenero")
                        .WithMany()
                        .HasForeignKey("Fiscal_SPED_TabelaSpedCodigoGeneroId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaSpedInformacaoAdicionalItem", "Fiscal_SPED_TabelaSpedInformacaoAdicionalItem")
                        .WithMany()
                        .HasForeignKey("Fiscal_SPED_TabelaSpedInformacaoAdicionalItemId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaSpedTipoItem", "Fiscal_SPED_TabelaSpedTipoItem")
                        .WithMany()
                        .HasForeignKey("Fiscal_SPED_TabelaSpedTipoItemId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaANP", "Fiscal_TabelaANP")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaANPId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaBeneficioSPED", "Fiscal_TabelaBeneficioSPED")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaBeneficioSPEDId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCEST", "Fiscal_TabelaCEST")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaCESTId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_CSOSN", "Fiscal_TabelaCST_CSOSN")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaCST_CSOSNId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaNCM", "Fiscal_TabelaNCM")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaNCMId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaOrigemMercadoriaServico", "Fiscal_TabelaOrigemMercadoriaServico")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaOrigemMercadoriaServicoId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TipoMercadoria", "Fiscal_TipoMercadoria")
                        .WithMany()
                        .HasForeignKey("Fiscal_TipoMercadoriaId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.VinculoFiscal", "Fiscal_VinculoFiscal")
                        .WithMany()
                        .HasForeignKey("Fiscal_VinculoFiscalId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.Pessoa", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.GrupoMercadoria", "GrupoMercadoria")
                        .WithMany()
                        .HasForeignKey("GrupoMercadoriaId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.SubGrupoMercadoria", "SubGrupoMercadoria")
                        .WithMany()
                        .HasForeignKey("SubGrupoMercadoriaId")
                        .IsRequired();

                    b.Navigation("Estoque_TributacaoNFCe_TabelaCFOP");

                    b.Navigation("Estoque_TributacaoNFCe_TabelaSituacaoTributariaNFCe");

                    b.Navigation("Estoque_TributacaoNFCe_TipoServicoFiscal");

                    b.Navigation("Estoque_Unidade");

                    b.Navigation("Fabricante");

                    b.Navigation("Fiscal_NFE_TabelaCST_COFINS");

                    b.Navigation("Fiscal_NFE_TabelaCST_IPI");

                    b.Navigation("Fiscal_NFE_TabelaCST_PIS");

                    b.Navigation("Fiscal_NFS_ICMS_TabelaModalidadeDeterminacaoBCICMS");

                    b.Navigation("Fiscal_NFS_ICMS_TabelaMotivoDesoneracaoICMS");

                    b.Navigation("Fiscal_NFS_ICMSST_TabelaModalidadeDeterminacaoBCICMS");

                    b.Navigation("Fiscal_NFS_IPI_TabelaClasseEnquadramentoIPI");

                    b.Navigation("Fiscal_NFS_IPI_TabelaCodigoEnquadramentoIPI");

                    b.Navigation("Fiscal_NFS_IPI_TabelaCST_IPI");

                    b.Navigation("Fiscal_NFS_PISCOFINS_GrupoNaturezaReceita");

                    b.Navigation("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTCOFINS");

                    b.Navigation("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTPIS");

                    b.Navigation("Fiscal_NFS_PISCOFINS_TabelaNaturezaReceita");

                    b.Navigation("Fiscal_SPED_TabelaSpedCodigoGenero");

                    b.Navigation("Fiscal_SPED_TabelaSpedInformacaoAdicionalItem");

                    b.Navigation("Fiscal_SPED_TabelaSpedTipoItem");

                    b.Navigation("Fiscal_TabelaANP");

                    b.Navigation("Fiscal_TabelaBeneficioSPED");

                    b.Navigation("Fiscal_TabelaCEST");

                    b.Navigation("Fiscal_TabelaCST_CSOSN");

                    b.Navigation("Fiscal_TabelaNCM");

                    b.Navigation("Fiscal_TabelaOrigemMercadoriaServico");

                    b.Navigation("Fiscal_TipoMercadoria");

                    b.Navigation("Fiscal_VinculoFiscal");

                    b.Navigation("Fornecedor");

                    b.Navigation("GrupoMercadoria");

                    b.Navigation("SubGrupoMercadoria");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.MercadoriaFornecedor", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Pessoa", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.Mercadoria", "Mercadoria")
                        .WithMany()
                        .HasForeignKey("MercadoriaId")
                        .IsRequired();

                    b.Navigation("Fornecedor");

                    b.Navigation("Mercadoria");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Pessoa", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId");

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.SubGrupoMercadoria", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.GrupoMercadoria", "GrupoMercadoria")
                        .WithMany()
                        .HasForeignKey("GrupoMercadoriaId")
                        .IsRequired();

                    b.Navigation("GrupoMercadoria");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCEST", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.TabelaNCM", "TabelaNCM")
                        .WithMany()
                        .HasForeignKey("TabelaNCMId")
                        .IsRequired();

                    b.Navigation("TabelaNCM");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCFOP", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.GrupoCFOP", "GrupoCFOP")
                        .WithMany()
                        .HasForeignKey("GrupoCFOPId")
                        .IsRequired();

                    b.Navigation("GrupoCFOP");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaMotivoDesoneracaoICMS", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_CSOSN", "TabelaCST_CSOSN")
                        .WithMany()
                        .HasForeignKey("TabelaCST_CSOSNId")
                        .IsRequired();

                    b.Navigation("TabelaCST_CSOSN");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaNCM", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.GrupoNCM", "GrupoNCM")
                        .WithMany()
                        .HasForeignKey("GrupoNCMId")
                        .IsRequired();

                    b.Navigation("GrupoNCM");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaNaturezaReceita_CTS_PIS_COFINS", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.GrupoNaturezaReceita_CTS_PIS_COFINS", "GrupoNaturezaReceita_CTS_PIS_COFINS")
                        .WithMany()
                        .HasForeignKey("GrupoNaturezaReceita_CTS_PIS_COFINSId")
                        .IsRequired();

                    b.Navigation("GrupoNaturezaReceita_CTS_PIS_COFINS");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TipoServicoFiscal", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.TabelaCNAE", "TabelaCNAE")
                        .WithMany()
                        .HasForeignKey("TabelaCNAEId")
                        .IsRequired();

                    b.Navigation("TabelaCNAE");
                });
#pragma warning restore 612, 618
        }
    }
}
