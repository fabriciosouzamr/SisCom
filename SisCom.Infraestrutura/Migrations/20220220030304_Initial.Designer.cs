// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SisCom.Infraestrutura.Data.Context;

namespace SisCom.Infraestrutura.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20220220030304_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SisCom.Entidade.Modelos.Almoxarifado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Almoxarifados");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Cidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoIBGE")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .HasColumnType("varchar(100)");

                    b.Property<double>("CreditoSimplesNacional")
                        .HasColumnType("float");

                    b.Property<string>("EMail")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("End_Bairro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("End_CEP")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("End_CidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("End_Logradouro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("End_Numero")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Fantasia")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("InscricaoEstadual_SubTributaria")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("InscricaoMunicipal")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("RegimeTributario")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unidade")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("End_CidadeId");

                    b.ToTable("Empresa");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Estado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("PaisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            Id = new Guid("70e75ee9-ce97-4bf3-9021-c43096c64436"),
                            Codigo = "AC",
                            Nome = "Acre",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f7a2e37e-cf0d-4093-acd2-7c8ffca55726"),
                            Codigo = "AL",
                            Nome = "Alagoas",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a937cea9-8e9d-4cb7-a7d0-7d35e38e0701"),
                            Codigo = "AP",
                            Nome = "Amapá",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("dcbd2a45-a35d-4d2f-b74b-52e9aaefe6f8"),
                            Codigo = "AM",
                            Nome = "Amazonas",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e1a9d2fb-d0f6-4ad8-937f-f743ca0aa4b4"),
                            Codigo = "BA",
                            Nome = "Bahia",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("82cf67cb-9edc-4807-9d45-5badbcc2d10d"),
                            Codigo = "CE",
                            Nome = "Ceará",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c89c1019-7983-4b2d-aad2-ae2cdb69b8df"),
                            Codigo = "DF",
                            Nome = "Distrito Federal",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ad415ae7-aed0-4fbe-8ad6-9f4cbcb87096"),
                            Codigo = "ES",
                            Nome = "Espirito Santo",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6ebc7b66-46d4-482e-93df-f62046b60141"),
                            Codigo = "GO",
                            Nome = "Goias",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1a5e710b-f938-4015-8cb5-701d96ddf962"),
                            Codigo = "MA",
                            Nome = "Maranhão",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("55b6e6a8-80a5-44c5-992e-e21c3e782843"),
                            Codigo = "MS",
                            Nome = "Mato Grosso do Sul",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("55080afa-2bcc-42a9-821c-c32b06f6f3dd"),
                            Codigo = "MT",
                            Nome = "Mato Grosso",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("711d6dc1-f2c9-4917-840d-f4cdc0598c86"),
                            Codigo = "MG",
                            Nome = "Minas Gerais",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c69f5acb-47c4-4487-a506-c2b9f2995f33"),
                            Codigo = "PA",
                            Nome = "Pará",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("553b8968-67b5-4838-ab5b-0b3d0feffac6"),
                            Codigo = "PB",
                            Nome = "Paraíba",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("45d625f6-de25-460b-9f06-08fe819d3786"),
                            Codigo = "PR",
                            Nome = "Paraná",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("762eac4a-2684-4ac4-a293-92112c74ca61"),
                            Codigo = "PE",
                            Nome = "Pernambuco",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("442efb14-0819-44a0-b083-ffe3cc703ed3"),
                            Codigo = "PI",
                            Nome = "Piauí",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f0aac6ec-5827-4d71-887b-5430cc92d968"),
                            Codigo = "RJ",
                            Nome = "Rio de Janeiro",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("33366d29-681a-4320-8f9a-a44e4500f26c"),
                            Codigo = "RN",
                            Nome = "Rio Grande do Norte",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("746e2afd-dfb4-4190-92cb-20cd707e2d5c"),
                            Codigo = "RS",
                            Nome = "Rio Grande do Sul",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("29e42ae8-fb30-45d6-8cbb-12a8ad543721"),
                            Codigo = "RO",
                            Nome = "Rondônia",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("534e3d86-732c-45f6-8bee-3fef9e7f49bf"),
                            Codigo = "RR",
                            Nome = "Roraima",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e3701391-baf6-435f-bb01-c20b9eb2dd30"),
                            Codigo = "SC",
                            Nome = "Santa Catarina",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("38bd1f65-8b53-4f09-81c2-bbc282dce6fe"),
                            Codigo = "SP",
                            Nome = "São Paulo",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2f59a585-72a9-4a80-83af-a35c6998465a"),
                            Codigo = "SE",
                            Nome = "Sergipe",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6d0572b9-ab00-42a0-bdd1-1c77957c79c5"),
                            Codigo = "EX",
                            Nome = "Exterior",
                            PaisId = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Estoque", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlmoxarifadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("QuantidadeBloqueada")
                        .HasColumnType("float");

                    b.Property<double>("QuantidadeEmEstoque")
                        .HasColumnType("float");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlmoxarifadoId");

                    b.HasIndex("MercadoriaId");

                    b.ToTable("Estoques");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Fabricante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Fabricantes");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.GrupoCFOP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoOperacaoCFOP")
                        .HasColumnType("int");

                    b.Property<Guid>("TipoOperacaoCFOPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GrupoCFOPs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0de6a26d-9a59-467a-9c27-b7db81c945ac"),
                            Nome = "1.000 - ENTRADAS OU AQUISIÇÕES DE SERVIÇOS DO ESTADO",
                            TipoOperacaoCFOP = 1,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("07cee876-958f-4a8c-9684-502b744be7c3"),
                            Nome = "2.000 - ENTRADAS OU AQUISIÇÕES DE SERVIÇOS DE OUTROS ESTADOS",
                            TipoOperacaoCFOP = 2,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4e6c19b9-7923-4f24-9811-75618c83f948"),
                            Nome = "3.000 - ENTRADAS OU AQUISIÇÕES DE SERVIÇOS DO EXTERIOR",
                            TipoOperacaoCFOP = 3,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5daec5d5-b2c5-40d1-8442-283635275127"),
                            Nome = "5.000 - SAÍDAS OU PRESTAÇÕES DE SERVIÇOS PARA O ESTADO",
                            TipoOperacaoCFOP = 5,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8ff91efd-ad59-4b83-8839-a60b52874c6d"),
                            Nome = "6.000 - SAÍDAS OU PRESTAÇÕES DE SERVIÇOS PARA OUTROS ESTADOS",
                            TipoOperacaoCFOP = 6,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a4541095-4f2a-461a-9026-5f46c424543a"),
                            Nome = "7.000 - SAÍDAS OU PRESTAÇÕES DE SERVIÇOS PARA O EXTERIOR",
                            TipoOperacaoCFOP = 7,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.GrupoMercadoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("NaoVender")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GrupoMercadorias");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.GrupoNCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GrupoNCM");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.GrupoNaturezaReceita_CTS_PIS_COFINS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GrupoNaturezaReceita_CTS_PIS_COFINS");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Mercadoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativado")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CodigoBarra")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoFabricante")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Estoque_AlteracaoPreco")
                        .HasColumnType("datetime2");

                    b.Property<double>("Estoque_PesoBruto")
                        .HasColumnType("float");

                    b.Property<double>("Estoque_PesoLiquido")
                        .HasColumnType("float");

                    b.Property<string>("Estoque_Pratileira")
                        .HasColumnType("varchar(20)");

                    b.Property<double>("Estoque_Quantidade")
                        .HasColumnType("float");

                    b.Property<double>("Estoque_QuantidadeMinimo")
                        .HasColumnType("float");

                    b.Property<double>("Estoque_TributacaoNFCe_AliquotaICMS")
                        .HasColumnType("float");

                    b.Property<Guid>("Estoque_TributacaoNFCe_TabelaCFOPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Estoque_TributacaoNFCe_TabelaSituacaoTributariaNFCeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Estoque_TributacaoNFCe_TipoServicoFiscalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estoque_TributacaoNFCe_TipoServicoMunicipal")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("Estoque_UltimaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Estoque_UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FabricanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Fiscal_CodigoAnvisa")
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Fiscal_InformacaoAdicional")
                        .HasColumnType("varchar(200)");

                    b.Property<double>("Fiscal_NFE_COFINS_Aliquota")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFE_IPI_Aliquota")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFE_PIS_Aliquota")
                        .HasColumnType("float");

                    b.Property<Guid>("Fiscal_NFE_TabelaCST_COFINSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFE_TabelaCST_IPIId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFE_TabelaCST_PISId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_ICMSST_Aliquota")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_ICMSST_ReducaoBase")
                        .HasColumnType("float");

                    b.Property<Guid>("Fiscal_NFS_ICMSST_TabelaModalidadeDeterminacaoBCICMSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_ICMSST_ValorAdicional")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_ICMS_Deferimento")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_ICMS_ReducaoBase")
                        .HasColumnType("float");

                    b.Property<Guid>("Fiscal_NFS_ICMS_TabelaModalidadeDeterminacaoBCICMSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFS_ICMS_TabelaMotivoDesoneracaoICMSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_ICMS_ValorAdicional")
                        .HasColumnType("float");

                    b.Property<Guid>("Fiscal_NFS_IPI_TabelaCST_IPIId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFS_IPI_TabelaClasseEnquadramentoIPIId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFS_IPI_TabelaCodigoEnquadramentoIPIId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_IPI_ValorAliquota")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_PISCOFINS_COFINS_ValorAliquota")
                        .HasColumnType("float");

                    b.Property<Guid>("Fiscal_NFS_PISCOFINS_GrupoNaturezaReceitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTCOFINSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTPISId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_PISCOFINS_PIS_ValorAliquota")
                        .HasColumnType("float");

                    b.Property<Guid>("Fiscal_NFS_PISCOFINS_TabelaNaturezaReceitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_TributosEstaduais")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_TributosFederais")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_TributosMunicipais")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_TributosTotal")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_NFS_ValorTributosTotal")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_OutrosNVE")
                        .HasColumnType("float");

                    b.Property<double>("Fiscal_OutrosPMC")
                        .HasColumnType("float");

                    b.Property<Guid>("Fiscal_SPED_TabelaSpedCodigoGeneroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_SPED_TabelaSpedInformacaoAdicionalItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_SPED_TabelaSpedTipoItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaANPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaBeneficioSPEDId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaCESTId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaCST_CSOSNId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaNCMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaOrigemMercadoriaServicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TipoMercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_VinculoFiscalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FotoEspecificacao_Especificacao")
                        .HasColumnType("text");

                    b.Property<byte[]>("FotoEspecificacao_Imagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FotoEspecificacao_Imagem_ContentType")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FotoEspecificacao_URL")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("FotoEspecificacao_UsarFoto")
                        .HasColumnType("bit");

                    b.Property<Guid>("GrupoMercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("NaoControlarEstoque")
                        .HasColumnType("bit");

                    b.Property<bool>("NaoVender")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Observacao")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco_CalculoPrecificacao")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_CalculoPreco")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_Comissao")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_CustoFixo")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_CustoMercadoria")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_Embalagem")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_EncFinanceiro")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_Frete")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_ICMS_Compra")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_ICMS_Fronteira")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_ICMS_Venda")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_IPI")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_ImpostoFederais")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_MargemA")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_MargemB")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_MargemC")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_MargemSugerido")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_MargemVenda")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_Marketing")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_OutrosCustos")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_PontoEquilibrio")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_PrecoA")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_PrecoB")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_PrecoC")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_PrecoCompra")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_PrecoSugerido")
                        .HasColumnType("money");

                    b.Property<decimal>("Preco_PrecoVenda")
                        .HasColumnType("money");

                    b.Property<bool>("Producao_Configuracao_NaoBaixarComposicaoVenda")
                        .HasColumnType("bit");

                    b.Property<int>("Producao_Configuracao_ValidadeDias")
                        .HasColumnType("int");

                    b.Property<Guid>("SubGrupoMercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Estoque_TributacaoNFCe_TabelaCFOPId");

                    b.HasIndex("Estoque_TributacaoNFCe_TabelaSituacaoTributariaNFCeId");

                    b.HasIndex("Estoque_TributacaoNFCe_TipoServicoFiscalId");

                    b.HasIndex("Estoque_UnidadeId");

                    b.HasIndex("FabricanteId");

                    b.HasIndex("Fiscal_NFE_TabelaCST_COFINSId");

                    b.HasIndex("Fiscal_NFE_TabelaCST_IPIId");

                    b.HasIndex("Fiscal_NFE_TabelaCST_PISId");

                    b.HasIndex("Fiscal_NFS_ICMSST_TabelaModalidadeDeterminacaoBCICMSId");

                    b.HasIndex("Fiscal_NFS_ICMS_TabelaModalidadeDeterminacaoBCICMSId");

                    b.HasIndex("Fiscal_NFS_ICMS_TabelaMotivoDesoneracaoICMSId");

                    b.HasIndex("Fiscal_NFS_IPI_TabelaCST_IPIId");

                    b.HasIndex("Fiscal_NFS_IPI_TabelaClasseEnquadramentoIPIId");

                    b.HasIndex("Fiscal_NFS_IPI_TabelaCodigoEnquadramentoIPIId");

                    b.HasIndex("Fiscal_NFS_PISCOFINS_GrupoNaturezaReceitaId");

                    b.HasIndex("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTCOFINSId");

                    b.HasIndex("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTPISId");

                    b.HasIndex("Fiscal_NFS_PISCOFINS_TabelaNaturezaReceitaId");

                    b.HasIndex("Fiscal_SPED_TabelaSpedCodigoGeneroId");

                    b.HasIndex("Fiscal_SPED_TabelaSpedInformacaoAdicionalItemId");

                    b.HasIndex("Fiscal_SPED_TabelaSpedTipoItemId");

                    b.HasIndex("Fiscal_TabelaANPId");

                    b.HasIndex("Fiscal_TabelaBeneficioSPEDId");

                    b.HasIndex("Fiscal_TabelaCESTId");

                    b.HasIndex("Fiscal_TabelaCST_CSOSNId");

                    b.HasIndex("Fiscal_TabelaNCMId");

                    b.HasIndex("Fiscal_TabelaOrigemMercadoriaServicoId");

                    b.HasIndex("Fiscal_TipoMercadoriaId");

                    b.HasIndex("Fiscal_VinculoFiscalId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("GrupoMercadoriaId");

                    b.HasIndex("SubGrupoMercadoriaId");

                    b.ToTable("Mercadorias");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.MercadoriaFornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoFonecedor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("QuantidadePorCaixa")
                        .HasColumnType("float");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("MercadoriaId");

                    b.ToTable("MercadoriaFornecedores");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Pais", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Paises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a4a4fea2-a390-4c25-9e59-cbbc28e9008c"),
                            Nome = "Brasil",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ_CPF")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("EMail")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("End_Bairro")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("End_CEP")
                        .HasColumnType("varchar(8)");

                    b.Property<Guid?>("End_CidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("End_Logradouro")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("End_Numero")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("End_PontoReferencia")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FAX")
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Fabricante")
                        .HasColumnType("bit");

                    b.Property<bool>("Fornecedor")
                        .HasColumnType("bit");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("InscricaoMunicipal")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeContato")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NomePopular")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Representante")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Site")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CNPJ_CPF")
                        .IsUnique()
                        .HasDatabaseName("idx_pessoas_CNPJ_CPF")
                        .HasFillFactor(80);

                    b.HasIndex("End_CidadeId");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Similar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Similares");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.SubGrupoMercadoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GrupoMercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GrupoMercadoriaId");

                    b.ToTable("SubGrupoMercadorias");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaANP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaANPs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaBeneficioSPED", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaBeneficioSPEDs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCEST", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("TabelaNCMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TabelaNCMId");

                    b.ToTable("TabelaCESTs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCFOP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("GrupoCFOPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GrupoCFOPId");

                    b.ToTable("TabelaCFOPs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCNAE", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaCNAEs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCST_CSOSN", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CRT")
                        .HasColumnType("int");

                    b.Property<string>("CSTEquivalente")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("DestacarICMS")
                        .HasColumnType("bit");

                    b.Property<bool>("DestacarICMSST")
                        .HasColumnType("bit");

                    b.Property<bool>("DestacarICMSSTEfetivo")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiDesoneracaoICMS")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiDiferimentoICMS")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiReducaoICMS")
                        .HasColumnType("bit");

                    b.Property<string>("ST")
                        .HasColumnType("varchar(2)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaCST_CSOSNs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCST_IPI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("DestacarIPI")
                        .HasColumnType("bit");

                    b.Property<int>("EntradaSaida")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaCST_IPIs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ccc9ba58-71e8-4c6c-9e2c-1d3f7635acd7"),
                            Codigo = "00",
                            Descricao = "Entrada com Recuperação de Crédito",
                            DestacarIPI = true,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5f341c13-d097-4945-93a2-fe6fd1ea1e10"),
                            Codigo = "01",
                            Descricao = "Entrada Tributável com Alíquota Zero",
                            DestacarIPI = false,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ac57d9f1-0a7f-49dc-9b11-bf2b4f1804aa"),
                            Codigo = "02",
                            Descricao = "Entrada Isenta",
                            DestacarIPI = false,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("324974ee-3b60-4291-8cf9-acfd2031f3e4"),
                            Codigo = "03",
                            Descricao = "Entrada Não-Tributada",
                            DestacarIPI = false,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d4e8249f-7bce-4714-b47b-1f31025e1519"),
                            Codigo = "04",
                            Descricao = "Entrada Imune",
                            DestacarIPI = false,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("569cf118-2db1-4b6b-b511-b02045ce70b3"),
                            Codigo = "05",
                            Descricao = "Entrada com Suspensão",
                            DestacarIPI = false,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ce80e81b-bd45-425b-92ee-febbd2a77cfe"),
                            Codigo = "49",
                            Descricao = "Outras Entradas",
                            DestacarIPI = true,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5bd2d47f-efd0-4d47-94de-8168f353244f"),
                            Codigo = "50",
                            Descricao = "Saída Tributada",
                            DestacarIPI = true,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a86e7397-78ef-4f41-b820-52669f4ad5b5"),
                            Codigo = "51",
                            Descricao = "Saída Tributável com Alíquota Zero",
                            DestacarIPI = false,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5c2f8ed5-35bb-4c89-a506-8eaec3ba2747"),
                            Codigo = "52",
                            Descricao = "Saída Isenta",
                            DestacarIPI = false,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("63098179-2698-449d-ad86-644ab774c25f"),
                            Codigo = "53",
                            Descricao = "Saída Não-Tributada",
                            DestacarIPI = false,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("792749f7-f4c2-4469-8fca-e683b23762b3"),
                            Codigo = "54",
                            Descricao = "Saída Imune",
                            DestacarIPI = false,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("42ee4722-7530-476c-a46e-63c30690f206"),
                            Codigo = "55",
                            Descricao = "Saída com Suspensão",
                            DestacarIPI = false,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("40415dc6-fc8a-4086-b2e4-7bdea3c8a009"),
                            Codigo = "99",
                            Descricao = "Outras Saídas",
                            DestacarIPI = true,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCST_PIS_COFINS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("DestacarPIS_COFINS")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UsaNaEntrada")
                        .HasColumnType("bit");

                    b.Property<bool>("UsaNaSaida")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TabelaCST_PIS_COFINSs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2ea1852d-27c2-4933-a034-3988b0cecdd7"),
                            Codigo = "01",
                            Descricao = "Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo/não cumulativo))",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("ac0a42aa-a656-4728-98bd-2cf8e5b4eaa3"),
                            Codigo = "02",
                            Descricao = "Operação Tributável (base de cálculo = valor da operação (alíquota diferenciada))",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("96acc05a-2980-493f-8685-2fcd26e57d59"),
                            Codigo = "03",
                            Descricao = "Operação Tributável (base de cálculo = quantidade vendida x alíquota por unidade de produto)",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("660a257a-aa88-457b-b5f3-bb1f3be60788"),
                            Codigo = "04",
                            Descricao = "Operação Tributável (tributação monofásica (alíquota zero))",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("544522bc-9f21-4cbb-bfb0-5abaea02fe6a"),
                            Codigo = "05",
                            Descricao = "Operação Tributável por Substituição Tributária",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("b672f78f-85b9-4465-9e5d-f72ab5fd4b0e"),
                            Codigo = "06",
                            Descricao = "Operação Tributável (alíquota zero)",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("9f2c55b4-a77f-4f01-b91e-275ae9866b9c"),
                            Codigo = "07",
                            Descricao = "Operação Isenta da Contribuição",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("0d495099-4cfc-4059-ab9c-154c1be1dc2a"),
                            Codigo = "08",
                            Descricao = "Operação Sem Incidência da Contribuição",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("8c25bef5-5176-4aed-bf98-68585a0993f7"),
                            Codigo = "09",
                            Descricao = "Operação com Suspensão da Contribuição",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("9e59c173-2c1d-41fc-b18b-ca737123f241"),
                            Codigo = "49",
                            Descricao = "Outras Operações de Saída",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("9ef75fe4-b266-47aa-ae6c-0ec2c45b4d6e"),
                            Codigo = "50",
                            Descricao = "Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Tributada no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("159162bf-8e25-4b6b-a29b-8e6c874f626c"),
                            Codigo = "51",
                            Descricao = "Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Não-Tributada no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("e0a17a88-f581-4723-8270-2b5956596f12"),
                            Codigo = "52",
                            Descricao = "Operação com Direito a Crédito - Vinculada Exclusivamente a Receita de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("6895ef66-e5ed-438e-b46e-d26a419f33fb"),
                            Codigo = "53",
                            Descricao = "Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não - Tributadas no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("14557572-6a0b-45ef-bd9f-1e6d7f7d5d4f"),
                            Codigo = "54",
                            Descricao = "Operação com Direito a Crédito - Vinculada a Receitas Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("d6914fc7-fb4c-435e-8d6d-9ade0d1d405c"),
                            Codigo = "55",
                            Descricao = "Operação com Direito a Crédito - Vinculada a Receitas Não Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("9f6abdab-cf02-4b7c-b1fc-516541ea7f6a"),
                            Codigo = "56",
                            Descricao = "Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não - Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("8c00ed24-1725-445d-b540-a5b3d4b57a4c"),
                            Codigo = "60",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada Exclusivamente a Receita Tributada no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("8b54ff12-5408-4680-9013-be9d441902c8"),
                            Codigo = "61",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada Exclusivamente a Receita Não - Tributada no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("705dbc1b-b5e9-4b2c-9c45-91de1206a374"),
                            Codigo = "62",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada Exclusivamente a Receita de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("776251d4-7cb0-498e-8857-c959f4149250"),
                            Codigo = "63",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("6c923d3f-530b-4b5e-ade0-b126655e7676"),
                            Codigo = "64",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada a Receitas Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("507eff37-1716-40e2-972b-b4eb91ba7501"),
                            Codigo = "65",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("23f35065-427c-48ab-8fda-e1f5630fcc6a"),
                            Codigo = "66",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("fa54ff8f-41e1-442f-8ffc-1b39e96d1bf1"),
                            Codigo = "67",
                            Descricao = "Crédito Presumido -Outras Operações",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("b6ca1ffd-3828-4600-ac4e-7b6937e780f5"),
                            Codigo = "70",
                            Descricao = "Operação de Aquisição sem Direito a Crédito",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("e3754207-8cba-4fcd-94a5-b8b8b4c830e0"),
                            Codigo = "71",
                            Descricao = "Operação de Aquisição com Isenção",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("e81a5b41-2de4-45ad-b87b-b0829fa6c39c"),
                            Codigo = "72",
                            Descricao = "Operação de Aquisição com Suspensão",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("74fd2260-bed8-4b20-b04f-ac90829a477e"),
                            Codigo = "73",
                            Descricao = "Operação de Aquisição a Alíquota Zero",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("f3beb9bf-b22f-4b6c-95a6-9c69f8b0e5d5"),
                            Codigo = "74",
                            Descricao = "Operação de Aquisição sem Incidência da Contribuição",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("ff1265f4-ff7c-48ad-b0c6-fd3539334e44"),
                            Codigo = "75",
                            Descricao = "Operação de Aquisição por Substituição Tributária",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("229f906c-5ffa-4eea-8bfa-a741d76bd70f"),
                            Codigo = "98",
                            Descricao = "Outras Operações de Entrada",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("c41b71c1-8e89-411b-822d-45735559d3b0"),
                            Codigo = "99",
                            Descricao = "Outras Operações",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = true
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaClasseEnquadramentoIPI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaClasseEnquadramentoIPIs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCodigoEnquadramentoIPI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("GrupoTabelaCodigoEnquadramentoIPI")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaCodigoEnquadramentoIPIs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaModalidadeDeterminacaoBCICMS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("TipoModalidadeDeterminacaoBCICMS")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaModalidadeDeterminacaoBCICMSs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaMotivoDesoneracaoICMS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("TabelaCST_CSOSNId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TabelaCST_CSOSNId");

                    b.ToTable("TabelaMotivoDesoneracaoICMSs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaNCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("GrupoNCMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GrupoNCMId");

                    b.ToTable("TabelaNCMs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaNaturezaReceita_CTS_PIS_COFINS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("GrupoNaturezaReceita_CTS_PIS_COFINSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GrupoNaturezaReceita_CTS_PIS_COFINSId");

                    b.ToTable("TabelaNaturezaReceita_CTS_PIS_COFINS");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaOrigemMercadoriaServico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaOrigemMercadoriaServicos");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaSituacaoTributariaNFCe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaSituacaoTributariaNFCes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2d10d007-021b-4922-a7c7-a12a97c5df4e"),
                            Codigo = "01",
                            Descricao = "Normal(% TRIBUTADO)",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("58e78195-9986-4654-8562-297304f855cc"),
                            Codigo = "FF",
                            Descricao = "Substituição",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("fe8e7c01-c452-4bac-8bb9-8cb75eeb8a68"),
                            Codigo = "II",
                            Descricao = "Isento",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9d3cd64c-6def-47dd-98fb-dfc8e208cb61"),
                            Codigo = "NN",
                            Descricao = "Não Incidente",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaSpedCodigoGenero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaSpedCodigoGeneros");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaSpedInformacaoAdicionalItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaSpedInformacaoAdicionalItens");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaSpedTipoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaSpedTipoItems");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TipoMercadoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TipoMercadorias");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bd303578-6f49-4b0c-91a6-3e3d227ac169"),
                            Nome = "VEÍCULO",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("443b2943-864a-4439-86cc-4276d35bb219"),
                            Nome = "COMBUSTÍVEL",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9a9c92d8-58c4-49e1-98b0-f88434db4de7"),
                            Nome = "MEDICAMENTO",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0f35a334-c6fb-4bad-ac53-4a55b5bcd0ca"),
                            Nome = "ARMAMENTO",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TipoServicoFiscal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("TabelaCNAEId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TabelaCNAEId");

                    b.ToTable("TipoServicoFiscais");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.UnidadeMedida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UnidadeMedidas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2ba08f57-3a0d-4690-90f0-3e8a528d9c5b"),
                            Codigo = "UND",
                            Nome = "Unidade",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a27349ec-90ee-4677-8cc7-0598239d2f1b"),
                            Codigo = "CXA",
                            Nome = "Caixa",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ec751484-adfb-4023-a36b-14c494316e91"),
                            Codigo = "PCA",
                            Nome = "Peca",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("15653c42-9a61-4ffa-b48c-667260dac2b7"),
                            Codigo = "MTR",
                            Nome = "Metro",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("36a5a774-4384-40ca-b02a-b188f66e332a"),
                            Codigo = "KG",
                            Nome = "Kilograma",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e9feff60-2792-48d7-b230-90263938be8b"),
                            Codigo = "LTR",
                            Nome = "Litro ",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a2cfc38a-e907-4a72-a451-58e7372803bd"),
                            Codigo = "PCT",
                            Nome = "Pacote",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("2b2dd826-349e-4bc4-9444-25433ccf70ec"),
                            Codigo = "SCO",
                            Nome = "Saco",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("70e3dbdb-c043-4364-b918-213157d71eae"),
                            Codigo = "FRC",
                            Nome = "Frasco",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c8a2f76b-3087-4ab3-9434-b0e592d94fad"),
                            Codigo = "GR",
                            Nome = "Grama",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d073bc62-9f0d-47ca-99c2-059b2589384e"),
                            Codigo = "FRD",
                            Nome = "Fardo",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.VinculoFiscal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("VinculoFiscais");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Cidade", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Empresa", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Cidade", "End_Cidade")
                        .WithMany()
                        .HasForeignKey("End_CidadeId");

                    b.Navigation("End_Cidade");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Estado", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Estoque", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Almoxarifado", "Almoxarifado")
                        .WithMany()
                        .HasForeignKey("AlmoxarifadoId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.Mercadoria", "Mercadoria")
                        .WithMany()
                        .HasForeignKey("MercadoriaId")
                        .IsRequired();

                    b.Navigation("Almoxarifado");

                    b.Navigation("Mercadoria");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Mercadoria", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.TabelaCFOP", "Estoque_TributacaoNFCe_TabelaCFOP")
                        .WithMany()
                        .HasForeignKey("Estoque_TributacaoNFCe_TabelaCFOPId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaSituacaoTributariaNFCe", "Estoque_TributacaoNFCe_TabelaSituacaoTributariaNFCe")
                        .WithMany()
                        .HasForeignKey("Estoque_TributacaoNFCe_TabelaSituacaoTributariaNFCeId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TipoServicoFiscal", "Estoque_TributacaoNFCe_TipoServicoFiscal")
                        .WithMany()
                        .HasForeignKey("Estoque_TributacaoNFCe_TipoServicoFiscalId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.UnidadeMedida", "Estoque_Unidade")
                        .WithMany()
                        .HasForeignKey("Estoque_UnidadeId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.Pessoa", "Fabricante")
                        .WithMany()
                        .HasForeignKey("FabricanteId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_PIS_COFINS", "Fiscal_NFE_TabelaCST_COFINS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFE_TabelaCST_COFINSId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_IPI", "Fiscal_NFE_TabelaCST_IPI")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFE_TabelaCST_IPIId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_PIS_COFINS", "Fiscal_NFE_TabelaCST_PIS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFE_TabelaCST_PISId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaModalidadeDeterminacaoBCICMS", "Fiscal_NFS_ICMSST_TabelaModalidadeDeterminacaoBCICMS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_ICMSST_TabelaModalidadeDeterminacaoBCICMSId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaModalidadeDeterminacaoBCICMS", "Fiscal_NFS_ICMS_TabelaModalidadeDeterminacaoBCICMS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_ICMS_TabelaModalidadeDeterminacaoBCICMSId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaMotivoDesoneracaoICMS", "Fiscal_NFS_ICMS_TabelaMotivoDesoneracaoICMS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_ICMS_TabelaMotivoDesoneracaoICMSId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_IPI", "Fiscal_NFS_IPI_TabelaCST_IPI")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_IPI_TabelaCST_IPIId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaClasseEnquadramentoIPI", "Fiscal_NFS_IPI_TabelaClasseEnquadramentoIPI")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_IPI_TabelaClasseEnquadramentoIPIId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCodigoEnquadramentoIPI", "Fiscal_NFS_IPI_TabelaCodigoEnquadramentoIPI")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_IPI_TabelaCodigoEnquadramentoIPIId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.GrupoNaturezaReceita_CTS_PIS_COFINS", "Fiscal_NFS_PISCOFINS_GrupoNaturezaReceita")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_PISCOFINS_GrupoNaturezaReceitaId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_PIS_COFINS", "Fiscal_NFS_PISCOFINS_PIS_TabelaCSTCOFINS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTCOFINSId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_PIS_COFINS", "Fiscal_NFS_PISCOFINS_PIS_TabelaCSTPIS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTPISId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaNaturezaReceita_CTS_PIS_COFINS", "Fiscal_NFS_PISCOFINS_TabelaNaturezaReceita")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_PISCOFINS_TabelaNaturezaReceitaId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaSpedCodigoGenero", "Fiscal_SPED_TabelaSpedCodigoGenero")
                        .WithMany()
                        .HasForeignKey("Fiscal_SPED_TabelaSpedCodigoGeneroId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaSpedInformacaoAdicionalItem", "Fiscal_SPED_TabelaSpedInformacaoAdicionalItem")
                        .WithMany()
                        .HasForeignKey("Fiscal_SPED_TabelaSpedInformacaoAdicionalItemId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaSpedTipoItem", "Fiscal_SPED_TabelaSpedTipoItem")
                        .WithMany()
                        .HasForeignKey("Fiscal_SPED_TabelaSpedTipoItemId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaANP", "Fiscal_TabelaANP")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaANPId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaBeneficioSPED", "Fiscal_TabelaBeneficioSPED")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaBeneficioSPEDId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCEST", "Fiscal_TabelaCEST")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaCESTId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_CSOSN", "Fiscal_TabelaCST_CSOSN")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaCST_CSOSNId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaNCM", "Fiscal_TabelaNCM")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaNCMId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaOrigemMercadoriaServico", "Fiscal_TabelaOrigemMercadoriaServico")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaOrigemMercadoriaServicoId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TipoMercadoria", "Fiscal_TipoMercadoria")
                        .WithMany()
                        .HasForeignKey("Fiscal_TipoMercadoriaId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.VinculoFiscal", "Fiscal_VinculoFiscal")
                        .WithMany()
                        .HasForeignKey("Fiscal_VinculoFiscalId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.Pessoa", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.GrupoMercadoria", "GrupoMercadoria")
                        .WithMany()
                        .HasForeignKey("GrupoMercadoriaId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.SubGrupoMercadoria", "SubGrupoMercadoria")
                        .WithMany()
                        .HasForeignKey("SubGrupoMercadoriaId")
                        .IsRequired();

                    b.Navigation("Estoque_TributacaoNFCe_TabelaCFOP");

                    b.Navigation("Estoque_TributacaoNFCe_TabelaSituacaoTributariaNFCe");

                    b.Navigation("Estoque_TributacaoNFCe_TipoServicoFiscal");

                    b.Navigation("Estoque_Unidade");

                    b.Navigation("Fabricante");

                    b.Navigation("Fiscal_NFE_TabelaCST_COFINS");

                    b.Navigation("Fiscal_NFE_TabelaCST_IPI");

                    b.Navigation("Fiscal_NFE_TabelaCST_PIS");

                    b.Navigation("Fiscal_NFS_ICMS_TabelaModalidadeDeterminacaoBCICMS");

                    b.Navigation("Fiscal_NFS_ICMS_TabelaMotivoDesoneracaoICMS");

                    b.Navigation("Fiscal_NFS_ICMSST_TabelaModalidadeDeterminacaoBCICMS");

                    b.Navigation("Fiscal_NFS_IPI_TabelaClasseEnquadramentoIPI");

                    b.Navigation("Fiscal_NFS_IPI_TabelaCodigoEnquadramentoIPI");

                    b.Navigation("Fiscal_NFS_IPI_TabelaCST_IPI");

                    b.Navigation("Fiscal_NFS_PISCOFINS_GrupoNaturezaReceita");

                    b.Navigation("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTCOFINS");

                    b.Navigation("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTPIS");

                    b.Navigation("Fiscal_NFS_PISCOFINS_TabelaNaturezaReceita");

                    b.Navigation("Fiscal_SPED_TabelaSpedCodigoGenero");

                    b.Navigation("Fiscal_SPED_TabelaSpedInformacaoAdicionalItem");

                    b.Navigation("Fiscal_SPED_TabelaSpedTipoItem");

                    b.Navigation("Fiscal_TabelaANP");

                    b.Navigation("Fiscal_TabelaBeneficioSPED");

                    b.Navigation("Fiscal_TabelaCEST");

                    b.Navigation("Fiscal_TabelaCST_CSOSN");

                    b.Navigation("Fiscal_TabelaNCM");

                    b.Navigation("Fiscal_TabelaOrigemMercadoriaServico");

                    b.Navigation("Fiscal_TipoMercadoria");

                    b.Navigation("Fiscal_VinculoFiscal");

                    b.Navigation("Fornecedor");

                    b.Navigation("GrupoMercadoria");

                    b.Navigation("SubGrupoMercadoria");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.MercadoriaFornecedor", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Pessoa", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.Mercadoria", "Mercadoria")
                        .WithMany()
                        .HasForeignKey("MercadoriaId")
                        .IsRequired();

                    b.Navigation("Fornecedor");

                    b.Navigation("Mercadoria");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Pessoa", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Cidade", "End_Cidade")
                        .WithMany()
                        .HasForeignKey("End_CidadeId");

                    b.Navigation("End_Cidade");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.SubGrupoMercadoria", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.GrupoMercadoria", "GrupoMercadoria")
                        .WithMany()
                        .HasForeignKey("GrupoMercadoriaId")
                        .IsRequired();

                    b.Navigation("GrupoMercadoria");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCEST", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.TabelaNCM", "TabelaNCM")
                        .WithMany()
                        .HasForeignKey("TabelaNCMId")
                        .IsRequired();

                    b.Navigation("TabelaNCM");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCFOP", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.GrupoCFOP", "GrupoCFOP")
                        .WithMany()
                        .HasForeignKey("GrupoCFOPId")
                        .IsRequired();

                    b.Navigation("GrupoCFOP");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaMotivoDesoneracaoICMS", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_CSOSN", "TabelaCST_CSOSN")
                        .WithMany()
                        .HasForeignKey("TabelaCST_CSOSNId")
                        .IsRequired();

                    b.Navigation("TabelaCST_CSOSN");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaNCM", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.GrupoNCM", "GrupoNCM")
                        .WithMany()
                        .HasForeignKey("GrupoNCMId")
                        .IsRequired();

                    b.Navigation("GrupoNCM");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaNaturezaReceita_CTS_PIS_COFINS", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.GrupoNaturezaReceita_CTS_PIS_COFINS", "GrupoNaturezaReceita_CTS_PIS_COFINS")
                        .WithMany()
                        .HasForeignKey("GrupoNaturezaReceita_CTS_PIS_COFINSId")
                        .IsRequired();

                    b.Navigation("GrupoNaturezaReceita_CTS_PIS_COFINS");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TipoServicoFiscal", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.TabelaCNAE", "TabelaCNAE")
                        .WithMany()
                        .HasForeignKey("TabelaCNAEId")
                        .IsRequired();

                    b.Navigation("TabelaCNAE");
                });
#pragma warning restore 612, 618
        }
    }
}
