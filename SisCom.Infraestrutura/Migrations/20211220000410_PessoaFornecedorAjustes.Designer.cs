// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SisCom.Infraestrutura.Data.Context;

namespace SisCom.Infraestrutura.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20211220000410_PessoaFornecedorAjustes")]
    partial class PessoaFornecedorAjustes
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SisCom.Entidade.Modelos.Cidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidade");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Estado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("PaisId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9bbdbd9a-e91c-421e-852d-4d9f4603e1fd"),
                            Codigo = "AC",
                            Nome = "Acre",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("17dd5000-4fdb-4b7e-b1fd-2a079837120f"),
                            Codigo = "AL",
                            Nome = "Alagoas",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("f31df9d0-43ef-4463-8827-6b6c9f2ed1cf"),
                            Codigo = "AP",
                            Nome = "Amapá",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("0e274933-e42a-4cb9-83cf-82326d96a67b"),
                            Codigo = "AM",
                            Nome = "Amazonas",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("f0a9a4e6-2998-4cd7-b934-c6111ccc05fb"),
                            Codigo = "BA",
                            Nome = "Bahia",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("51524f7e-7bdc-42ea-a0c3-85319a8c52e3"),
                            Codigo = "CE",
                            Nome = "Ceará",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("431fe6c3-238b-46df-a531-ebe5f6cdf964"),
                            Codigo = "DF",
                            Nome = "Distrito Federal",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("e28cc545-1cec-497a-9b5d-432a3b913bb1"),
                            Codigo = "ES",
                            Nome = "Espirito Santo",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("90116c55-7bc9-4a9a-b6c9-bf0b09b71afa"),
                            Codigo = "GO",
                            Nome = "Goias",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("b51fc858-9c74-4ddf-959a-432ea3265012"),
                            Codigo = "MA",
                            Nome = "Maranhão",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("704454b3-39d9-413a-a6aa-bf86f297dbbb"),
                            Codigo = "MS",
                            Nome = "Mato Grosso do Sul",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("c5b933e8-452d-4c59-8644-ed2805986787"),
                            Codigo = "MT",
                            Nome = "Mato Grosso",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("323ed04c-9581-446b-a110-b2afdad13bac"),
                            Codigo = "MG",
                            Nome = "Minas Gerais",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("b7a63d5f-3a9a-4c94-8f76-c99276dc2677"),
                            Codigo = "PA",
                            Nome = "Pará",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("6ad2a569-efc8-4ea5-be4e-f1f3f58108a9"),
                            Codigo = "PB",
                            Nome = "Paraíba",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("bf2a8766-bea2-4d22-a7e9-43313d78af9a"),
                            Codigo = "PR",
                            Nome = "Paraná",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("ceace8ed-782a-454a-82cf-6b66a3e369ff"),
                            Codigo = "PE",
                            Nome = "Pernambuco",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("a8fbe120-4c7b-43ac-a66e-fca8b5e24cdc"),
                            Codigo = "PI",
                            Nome = "Piauí",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("785038c0-792e-4969-8a34-65a8e7de8279"),
                            Codigo = "RJ",
                            Nome = "Rio de Janeiro",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("ae8fbf07-8133-4657-8735-157042b03a55"),
                            Codigo = "RN",
                            Nome = "Rio Grande do Norte",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("9ea9fd16-ccea-4c2b-bce6-0d95d9e13a71"),
                            Codigo = "RS",
                            Nome = "Rio Grande do Sul",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("c4dd0642-a901-4134-bd70-0ace37a219b4"),
                            Codigo = "RO",
                            Nome = "Rondônia",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("d9109848-ba5c-4531-85de-2fc62f0c7b15"),
                            Codigo = "RR",
                            Nome = "Roraima",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("242114f9-cab5-4ce6-a143-f96be4b41245"),
                            Codigo = "SC",
                            Nome = "Santa Catarina",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("99574c6f-e7fa-459a-bfde-988bedd00812"),
                            Codigo = "SP",
                            Nome = "São Paulo",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("665c9aec-751a-48e3-8009-3ab178a23fa9"),
                            Codigo = "SE",
                            Nome = "Sergipe",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        },
                        new
                        {
                            Id = new Guid("8dbcb02e-9d46-418c-8c59-87de734a849d"),
                            Codigo = "EX",
                            Nome = "Exterior",
                            PaisId = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305")
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Fabricante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Fabricantes");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Grupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("NaoVender")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Grupos");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Pais", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Paises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("929b630e-20c4-4de2-b94b-a3ae00eb3305"),
                            Nome = "Brasil"
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ_CPF")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("CidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Contato")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("EMail")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("End_Bairro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("End_CEP")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid?>("End_CidadeIdId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("End_Logradouro")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("End_Numero")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FAX")
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("Fornecedor")
                        .HasColumnType("bit");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("InscricaoMunicipal")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomePopular")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("PontoReferencia")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Representante")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Site")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("int");

                    b.Property<int>("TipoPessoaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("End_CidadeIdId");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.SubGrupo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GrupoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoId");

                    b.ToTable("SubGrupos");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Cidade", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Estado", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Pessoa", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId");

                    b.HasOne("SisCom.Entidade.Modelos.Cidade", "End_CidadeId")
                        .WithMany()
                        .HasForeignKey("End_CidadeIdId");

                    b.Navigation("Cidade");

                    b.Navigation("End_CidadeId");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.SubGrupo", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Grupo", "Grupo")
                        .WithMany()
                        .HasForeignKey("GrupoId")
                        .IsRequired();

                    b.Navigation("Grupo");
                });
#pragma warning restore 612, 618
        }
    }
}
