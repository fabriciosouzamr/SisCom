// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SisCom.Infraestrutura.Data.Context;

namespace SisCom.Infraestrutura.Migrations
{
    [DbContext(typeof(MeuDbContext))]
    [Migration("20220220123500_SetDefaultValue")]
    partial class SetDefaultValue
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SisCom.Entidade.Modelos.Almoxarifado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Almoxarifados");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Cidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoIBGE")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<Guid>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Empresa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<double>("CreditoSimplesNacional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("EMail")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("End_Bairro")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("End_CEP")
                        .HasColumnType("varchar(8)");

                    b.Property<Guid?>("End_CidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("End_Logradouro")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("End_Numero")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Fantasia")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("InscricaoEstadual_SubTributaria")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("InscricaoMunicipal")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("RazaoSocial")
                        .HasColumnType("varchar(100)");

                    b.Property<int>("RegimeTributario")
                        .HasColumnType("int");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("End_CidadeId");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Estado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("PaisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Estados");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9616a0cc-5e55-47ce-b473-615b6fda6929"),
                            Codigo = "AC",
                            Nome = "Acre",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ea159fab-1f24-4735-8060-a7bc80bfaf04"),
                            Codigo = "AL",
                            Nome = "Alagoas",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("783d76e1-0ef0-4f48-867a-1b9b464df5e9"),
                            Codigo = "AP",
                            Nome = "Amapá",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cadebc30-4f17-4dac-b46a-0c572c7e04fc"),
                            Codigo = "AM",
                            Nome = "Amazonas",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d747d9c2-047e-4561-9676-54fa0fb95ad3"),
                            Codigo = "BA",
                            Nome = "Bahia",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("7c13c965-8e97-4aad-a92a-44862152857c"),
                            Codigo = "CE",
                            Nome = "Ceará",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("77dfc781-f790-4587-99bd-087118bcc474"),
                            Codigo = "DF",
                            Nome = "Distrito Federal",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("02e96beb-cb98-4a08-bcd9-df018cd3bd7b"),
                            Codigo = "ES",
                            Nome = "Espirito Santo",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9037e387-2eb4-40a5-bd99-b22968dffe17"),
                            Codigo = "GO",
                            Nome = "Goias",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8ba2a165-3a52-4518-99e2-a808925b9228"),
                            Codigo = "MA",
                            Nome = "Maranhão",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9ec8e867-4304-46e4-9699-6b86dbc07e57"),
                            Codigo = "MS",
                            Nome = "Mato Grosso do Sul",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("781c2f81-bc6a-4845-944c-61dc6df18bee"),
                            Codigo = "MT",
                            Nome = "Mato Grosso",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d5026560-d966-4cf7-a6e0-1331b23d90b2"),
                            Codigo = "MG",
                            Nome = "Minas Gerais",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4a4aac65-e2c3-44e2-aa5a-9f33596608a8"),
                            Codigo = "PA",
                            Nome = "Pará",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("30793823-a5f7-433a-9666-16ca4618705d"),
                            Codigo = "PB",
                            Nome = "Paraíba",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ddc62734-e8a3-4a0e-b320-e04857c68e3e"),
                            Codigo = "PR",
                            Nome = "Paraná",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5faac871-d3e6-4a58-9746-29a11d8ddfe4"),
                            Codigo = "PE",
                            Nome = "Pernambuco",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("61e04229-6a43-481a-9050-cf8eaded6210"),
                            Codigo = "PI",
                            Nome = "Piauí",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("69dbd44d-330b-449e-bcf5-63de519571cf"),
                            Codigo = "RJ",
                            Nome = "Rio de Janeiro",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e43ce966-e63e-4446-bcb8-6b793aab1cbe"),
                            Codigo = "RN",
                            Nome = "Rio Grande do Norte",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e5578c22-b5f5-4c3c-8a23-d95c202e213c"),
                            Codigo = "RS",
                            Nome = "Rio Grande do Sul",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("93cd8035-83ea-4451-9003-21f03c2a79e3"),
                            Codigo = "RO",
                            Nome = "Rondônia",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("bd258451-f46e-4de7-a7e2-91040b7340e5"),
                            Codigo = "RR",
                            Nome = "Roraima",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f4e044e4-8709-4eab-bb7c-e9d2c5765298"),
                            Codigo = "SC",
                            Nome = "Santa Catarina",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("27f89ec5-da57-4e0d-a354-8d5c46c65c8a"),
                            Codigo = "SP",
                            Nome = "São Paulo",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0e1aaf33-b3c3-4f0f-9afd-7bb6b1ad00c4"),
                            Codigo = "SE",
                            Nome = "Sergipe",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("5d1591a2-72f3-45be-afd7-752af8199c4b"),
                            Codigo = "EX",
                            Nome = "Exterior",
                            PaisId = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Estoque", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AlmoxarifadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("QuantidadeBloqueada")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("QuantidadeEmEstoque")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AlmoxarifadoId");

                    b.HasIndex("MercadoriaId");

                    b.ToTable("Estoques");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Fabricante", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Fabricantes");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.GrupoCFOP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("TipoOperacaoCFOP")
                        .HasColumnType("int");

                    b.Property<Guid>("TipoOperacaoCFOPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GrupoCFOPs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("29088a5e-44dd-47cd-903f-1be74dc27e98"),
                            Nome = "1.000 - ENTRADAS OU AQUISIÇÕES DE SERVIÇOS DO ESTADO",
                            TipoOperacaoCFOP = 1,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("48283b6d-4630-4918-a2db-8661e24757e4"),
                            Nome = "2.000 - ENTRADAS OU AQUISIÇÕES DE SERVIÇOS DE OUTROS ESTADOS",
                            TipoOperacaoCFOP = 2,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a95d2d30-6f3a-49a3-af8e-a68347e79057"),
                            Nome = "3.000 - ENTRADAS OU AQUISIÇÕES DE SERVIÇOS DO EXTERIOR",
                            TipoOperacaoCFOP = 3,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9f2ddede-b9de-43f1-afd7-047743058bc9"),
                            Nome = "5.000 - SAÍDAS OU PRESTAÇÕES DE SERVIÇOS PARA O ESTADO",
                            TipoOperacaoCFOP = 5,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("eace3cfc-9844-42b2-aef0-9bc0a4a4fc3e"),
                            Nome = "6.000 - SAÍDAS OU PRESTAÇÕES DE SERVIÇOS PARA OUTROS ESTADOS",
                            TipoOperacaoCFOP = 6,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("09600943-ca75-4ac9-b9df-11d7804828ff"),
                            Nome = "7.000 - SAÍDAS OU PRESTAÇÕES DE SERVIÇOS PARA O EXTERIOR",
                            TipoOperacaoCFOP = 7,
                            TipoOperacaoCFOPId = new Guid("00000000-0000-0000-0000-000000000000"),
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.GrupoMercadoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<bool>("NaoVender")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GrupoMercadorias");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.GrupoNCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GrupoNCM");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.GrupoNaturezaReceita_CTS_PIS_COFINS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GrupoNaturezaReceita_CTS_PIS_COFINS");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Mercadoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativado")
                        .HasColumnType("bit");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("CodigoBarra")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CodigoFabricante")
                        .HasColumnType("varchar(50)");

                    b.Property<DateTime>("Estoque_AlteracaoPreco")
                        .HasColumnType("datetime2");

                    b.Property<double>("Estoque_PesoBruto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Estoque_PesoLiquido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<string>("Estoque_Pratileira")
                        .HasColumnType("varchar(20)");

                    b.Property<double>("Estoque_Quantidade")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Estoque_QuantidadeMinimo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Estoque_TributacaoNFCe_AliquotaICMS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("Estoque_TributacaoNFCe_TabelaCFOPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Estoque_TributacaoNFCe_TabelaSituacaoTributariaNFCeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Estoque_TributacaoNFCe_TipoServicoFiscalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Estoque_TributacaoNFCe_TipoServicoMunicipal")
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("Estoque_UltimaEntrada")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Estoque_UnidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FabricanteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Fiscal_CodigoAnvisa")
                        .HasColumnType("varchar(13)");

                    b.Property<string>("Fiscal_InformacaoAdicional")
                        .HasColumnType("varchar(200)");

                    b.Property<double>("Fiscal_NFE_COFINS_Aliquota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Fiscal_NFE_IPI_Aliquota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Fiscal_NFE_PIS_Aliquota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("Fiscal_NFE_TabelaCST_COFINSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFE_TabelaCST_IPIId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFE_TabelaCST_PISId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_ICMSST_Aliquota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Fiscal_NFS_ICMSST_ReducaoBase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("Fiscal_NFS_ICMSST_TabelaModalidadeDeterminacaoBCICMSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_ICMSST_ValorAdicional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Fiscal_NFS_ICMS_Deferimento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Fiscal_NFS_ICMS_ReducaoBase")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("Fiscal_NFS_ICMS_TabelaModalidadeDeterminacaoBCICMSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFS_ICMS_TabelaMotivoDesoneracaoICMSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_ICMS_ValorAdicional")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("Fiscal_NFS_IPI_TabelaCST_IPIId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFS_IPI_TabelaClasseEnquadramentoIPIId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFS_IPI_TabelaCodigoEnquadramentoIPIId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_IPI_ValorAliquota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Fiscal_NFS_PISCOFINS_COFINS_ValorAliquota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("Fiscal_NFS_PISCOFINS_GrupoNaturezaReceitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTCOFINSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTPISId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_PISCOFINS_PIS_ValorAliquota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("Fiscal_NFS_PISCOFINS_TabelaNaturezaReceitaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fiscal_NFS_TributosEstaduais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Fiscal_NFS_TributosFederais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Fiscal_NFS_TributosMunicipais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Fiscal_NFS_TributosTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Fiscal_NFS_ValorTributosTotal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Fiscal_OutrosNVE")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<double>("Fiscal_OutrosPMC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("float")
                        .HasDefaultValue(0.0);

                    b.Property<Guid>("Fiscal_SPED_TabelaSpedCodigoGeneroId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_SPED_TabelaSpedInformacaoAdicionalItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_SPED_TabelaSpedTipoItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaANPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaBeneficioSPEDId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaCESTId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaCST_CSOSNId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaNCMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TabelaOrigemMercadoriaServicoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_TipoMercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Fiscal_VinculoFiscalId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FotoEspecificacao_Especificacao")
                        .HasColumnType("text");

                    b.Property<byte[]>("FotoEspecificacao_Imagem")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FotoEspecificacao_Imagem_ContentType")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FotoEspecificacao_URL")
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("FotoEspecificacao_UsarFoto")
                        .HasColumnType("bit");

                    b.Property<Guid>("GrupoMercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("NaoControlarEstoque")
                        .HasColumnType("bit");

                    b.Property<bool>("NaoVender")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Observacao")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco_CalculoPrecificacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_CalculoPreco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_Comissao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_CustoFixo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_CustoMercadoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_Embalagem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_EncFinanceiro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_Frete")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_ICMS_Compra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_ICMS_Fronteira")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_ICMS_Venda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_IPI")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_ImpostoFederais")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_MargemA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_MargemB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_MargemC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_MargemSugerido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_MargemVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_Marketing")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_OutrosCustos")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_PontoEquilibrio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_PrecoA")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_PrecoB")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_PrecoC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_PrecoCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_PrecoSugerido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<decimal>("Preco_PrecoVenda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("money")
                        .HasDefaultValue(0m);

                    b.Property<bool>("Producao_Configuracao_NaoBaixarComposicaoVenda")
                        .HasColumnType("bit");

                    b.Property<int>("Producao_Configuracao_ValidadeDias")
                        .HasColumnType("int");

                    b.Property<Guid>("SubGrupoMercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Estoque_TributacaoNFCe_TabelaCFOPId");

                    b.HasIndex("Estoque_TributacaoNFCe_TabelaSituacaoTributariaNFCeId");

                    b.HasIndex("Estoque_TributacaoNFCe_TipoServicoFiscalId");

                    b.HasIndex("Estoque_UnidadeId");

                    b.HasIndex("FabricanteId");

                    b.HasIndex("Fiscal_NFE_TabelaCST_COFINSId");

                    b.HasIndex("Fiscal_NFE_TabelaCST_IPIId");

                    b.HasIndex("Fiscal_NFE_TabelaCST_PISId");

                    b.HasIndex("Fiscal_NFS_ICMSST_TabelaModalidadeDeterminacaoBCICMSId");

                    b.HasIndex("Fiscal_NFS_ICMS_TabelaModalidadeDeterminacaoBCICMSId");

                    b.HasIndex("Fiscal_NFS_ICMS_TabelaMotivoDesoneracaoICMSId");

                    b.HasIndex("Fiscal_NFS_IPI_TabelaCST_IPIId");

                    b.HasIndex("Fiscal_NFS_IPI_TabelaClasseEnquadramentoIPIId");

                    b.HasIndex("Fiscal_NFS_IPI_TabelaCodigoEnquadramentoIPIId");

                    b.HasIndex("Fiscal_NFS_PISCOFINS_GrupoNaturezaReceitaId");

                    b.HasIndex("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTCOFINSId");

                    b.HasIndex("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTPISId");

                    b.HasIndex("Fiscal_NFS_PISCOFINS_TabelaNaturezaReceitaId");

                    b.HasIndex("Fiscal_SPED_TabelaSpedCodigoGeneroId");

                    b.HasIndex("Fiscal_SPED_TabelaSpedInformacaoAdicionalItemId");

                    b.HasIndex("Fiscal_SPED_TabelaSpedTipoItemId");

                    b.HasIndex("Fiscal_TabelaANPId");

                    b.HasIndex("Fiscal_TabelaBeneficioSPEDId");

                    b.HasIndex("Fiscal_TabelaCESTId");

                    b.HasIndex("Fiscal_TabelaCST_CSOSNId");

                    b.HasIndex("Fiscal_TabelaNCMId");

                    b.HasIndex("Fiscal_TabelaOrigemMercadoriaServicoId");

                    b.HasIndex("Fiscal_TipoMercadoriaId");

                    b.HasIndex("Fiscal_VinculoFiscalId");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("GrupoMercadoriaId");

                    b.HasIndex("SubGrupoMercadoriaId");

                    b.ToTable("Mercadorias");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.MercadoriaFornecedor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CodigoFonecedor")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("FornecedorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("QuantidadePorCaixa")
                        .HasColumnType("float");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FornecedorId");

                    b.HasIndex("MercadoriaId");

                    b.ToTable("MercadoriaFornecedores");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Pais", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Paises");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ea6ae817-b291-4814-a845-de7c37f53f82"),
                            Nome = "Brasil",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CNPJ_CPF")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("EMail")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("End_Bairro")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("End_CEP")
                        .HasColumnType("varchar(8)");

                    b.Property<Guid?>("End_CidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("End_Logradouro")
                        .HasColumnType("varchar(60)");

                    b.Property<string>("End_Numero")
                        .HasColumnType("varchar(10)");

                    b.Property<string>("End_PontoReferencia")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("FAX")
                        .HasColumnType("varchar(20)");

                    b.Property<bool>("Fabricante")
                        .HasColumnType("bit");

                    b.Property<bool>("Fornecedor")
                        .HasColumnType("bit");

                    b.Property<string>("InscricaoEstadual")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("InscricaoMunicipal")
                        .HasColumnType("varchar(15)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("NomeContato")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("NomePopular")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Observacoes")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Representante")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Site")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .HasColumnType("varchar(20)");

                    b.Property<int>("TipoPessoa")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CNPJ_CPF")
                        .IsUnique()
                        .HasDatabaseName("idx_pessoas_CNPJ_CPF")
                        .HasFillFactor(80);

                    b.HasIndex("End_CidadeId");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Similar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Similares");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.SubGrupoMercadoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GrupoMercadoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GrupoMercadoriaId");

                    b.ToTable("SubGrupoMercadorias");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaANP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaANPs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaBeneficioSPED", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaBeneficioSPEDs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCEST", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("TabelaNCMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TabelaNCMId");

                    b.ToTable("TabelaCESTs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCFOP", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("GrupoCFOPId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GrupoCFOPId");

                    b.ToTable("TabelaCFOPs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCNAE", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaCNAEs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCST_CSOSN", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CRT")
                        .HasColumnType("int");

                    b.Property<string>("CSTEquivalente")
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("DestacarICMS")
                        .HasColumnType("bit");

                    b.Property<bool>("DestacarICMSST")
                        .HasColumnType("bit");

                    b.Property<bool>("DestacarICMSSTEfetivo")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiDesoneracaoICMS")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiDiferimentoICMS")
                        .HasColumnType("bit");

                    b.Property<bool>("PossuiReducaoICMS")
                        .HasColumnType("bit");

                    b.Property<string>("ST")
                        .HasColumnType("varchar(2)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaCST_CSOSNs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCST_IPI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("DestacarIPI")
                        .HasColumnType("bit");

                    b.Property<int>("EntradaSaida")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaCST_IPIs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e8b02720-3ab5-4cf4-91ef-100d5564f0e3"),
                            Codigo = "00",
                            Descricao = "Entrada com Recuperação de Crédito",
                            DestacarIPI = true,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("beeb5abc-570b-4059-8c69-924d210bcb8a"),
                            Codigo = "01",
                            Descricao = "Entrada Tributável com Alíquota Zero",
                            DestacarIPI = false,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f5a83bdc-28e9-42da-8ff8-a23745aa4fc8"),
                            Codigo = "02",
                            Descricao = "Entrada Isenta",
                            DestacarIPI = false,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("602b93c7-cb76-427f-8d43-fa95734f5825"),
                            Codigo = "03",
                            Descricao = "Entrada Não-Tributada",
                            DestacarIPI = false,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d30a07ec-712f-48f4-9fbd-41ff4c0edc3f"),
                            Codigo = "04",
                            Descricao = "Entrada Imune",
                            DestacarIPI = false,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("8c4cc729-2060-4145-9076-013f11a13839"),
                            Codigo = "05",
                            Descricao = "Entrada com Suspensão",
                            DestacarIPI = false,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cb1f9af0-5732-4d99-b150-4303cd6d279e"),
                            Codigo = "49",
                            Descricao = "Outras Entradas",
                            DestacarIPI = true,
                            EntradaSaida = 1,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("cd072319-87e9-4ad0-adc4-0a6f699d2f3c"),
                            Codigo = "50",
                            Descricao = "Saída Tributada",
                            DestacarIPI = true,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("689fc616-e300-4e37-b96e-0939d9b53b84"),
                            Codigo = "51",
                            Descricao = "Saída Tributável com Alíquota Zero",
                            DestacarIPI = false,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("4e7d10d6-4f7b-414e-8f90-00c7daf0b9d8"),
                            Codigo = "52",
                            Descricao = "Saída Isenta",
                            DestacarIPI = false,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("563077dd-5009-4d93-950a-a3e159e20b31"),
                            Codigo = "53",
                            Descricao = "Saída Não-Tributada",
                            DestacarIPI = false,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6da9f8e2-21b9-4583-8819-908880649c6c"),
                            Codigo = "54",
                            Descricao = "Saída Imune",
                            DestacarIPI = false,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a27a29aa-f9d8-4113-849b-05b6d3b8a185"),
                            Codigo = "55",
                            Descricao = "Saída com Suspensão",
                            DestacarIPI = false,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e7b56194-81c8-465d-bde3-9ef4ad16e9f6"),
                            Codigo = "99",
                            Descricao = "Outras Saídas",
                            DestacarIPI = true,
                            EntradaSaida = 2,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCST_PIS_COFINS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<bool>("DestacarPIS_COFINS")
                        .HasColumnType("bit");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("UsaNaEntrada")
                        .HasColumnType("bit");

                    b.Property<bool>("UsaNaSaida")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TabelaCST_PIS_COFINSs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9dc9a904-b000-4399-8d05-eb7b05b31fdb"),
                            Codigo = "01",
                            Descricao = "Operação Tributável (base de cálculo = valor da operação alíquota normal (cumulativo/não cumulativo))",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("62fb953b-59d5-46e4-93e0-452c73a93d0f"),
                            Codigo = "02",
                            Descricao = "Operação Tributável (base de cálculo = valor da operação (alíquota diferenciada))",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("4a060ac5-323a-45b5-b31e-cf6451bf8927"),
                            Codigo = "03",
                            Descricao = "Operação Tributável (base de cálculo = quantidade vendida x alíquota por unidade de produto)",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("ab72c8dd-0de3-4fc7-bd4e-e44b728b0087"),
                            Codigo = "04",
                            Descricao = "Operação Tributável (tributação monofásica (alíquota zero))",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("069ec88d-7e64-4f0a-974f-a6cf58d005aa"),
                            Codigo = "05",
                            Descricao = "Operação Tributável por Substituição Tributária",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("9b2c6396-2b15-4f67-9774-7db6933d9eb1"),
                            Codigo = "06",
                            Descricao = "Operação Tributável (alíquota zero)",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("3f6337a9-ece6-4b10-865a-205418f7dab9"),
                            Codigo = "07",
                            Descricao = "Operação Isenta da Contribuição",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("64a8843d-4753-430f-a34a-bb03988ef8d7"),
                            Codigo = "08",
                            Descricao = "Operação Sem Incidência da Contribuição",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("1434aaea-4dd6-4a6c-a034-a6e5f4bde6a6"),
                            Codigo = "09",
                            Descricao = "Operação com Suspensão da Contribuição",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("3297a71f-d8d5-44ec-842f-b7221bacd0b2"),
                            Codigo = "49",
                            Descricao = "Outras Operações de Saída",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = false,
                            UsaNaSaida = true
                        },
                        new
                        {
                            Id = new Guid("4dc0569d-356d-4c0d-a733-6ce1aaf3e881"),
                            Codigo = "50",
                            Descricao = "Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Tributada no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("20c16dfe-5c3b-44d1-b9b1-767bb1145fc0"),
                            Codigo = "51",
                            Descricao = "Operação com Direito a Crédito - Vinculada Exclusivamente a Receita Não-Tributada no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("ed26bbf9-9413-47a3-83ee-827802f6435e"),
                            Codigo = "52",
                            Descricao = "Operação com Direito a Crédito - Vinculada Exclusivamente a Receita de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("a1f78cbf-9fa4-4809-bc44-9a85a2980332"),
                            Codigo = "53",
                            Descricao = "Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não - Tributadas no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("a06107ee-941c-4ed5-b655-c3deba5c5b17"),
                            Codigo = "54",
                            Descricao = "Operação com Direito a Crédito - Vinculada a Receitas Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("532d1324-623b-427d-9cc4-3ae7c1739788"),
                            Codigo = "55",
                            Descricao = "Operação com Direito a Crédito - Vinculada a Receitas Não Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("bed9db31-d4d8-4b72-8729-d80d85b058a8"),
                            Codigo = "56",
                            Descricao = "Operação com Direito a Crédito - Vinculada a Receitas Tributadas e Não - Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("1ecf9d9f-66a0-4400-9b56-25c702475dd5"),
                            Codigo = "60",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada Exclusivamente a Receita Tributada no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("58b0b3f1-74bc-4407-ada3-c06b40684423"),
                            Codigo = "61",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada Exclusivamente a Receita Não - Tributada no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("bf6970b9-52d7-4c53-a024-c0c5fafd2caa"),
                            Codigo = "62",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada Exclusivamente a Receita de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("c882c2af-a565-42df-8b96-fca693a877d2"),
                            Codigo = "63",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("94461050-8a45-472b-af8d-78999391b57a"),
                            Codigo = "64",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada a Receitas Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("e478d8bf-294a-4c34-a375-7d9bdbaedfbd"),
                            Codigo = "65",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada a Receitas Não-Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("33b1bcbc-4223-433a-9c49-e8e3ded1acdb"),
                            Codigo = "66",
                            Descricao = "Crédito Presumido -Operação de Aquisição Vinculada a Receitas Tributadas e Não-Tributadas no Mercado Interno e de Exportação",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("74d70ee3-6ea6-4a28-aec7-d687f211aad5"),
                            Codigo = "67",
                            Descricao = "Crédito Presumido -Outras Operações",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("da82e943-d00d-437e-8091-604f07cf1e7f"),
                            Codigo = "70",
                            Descricao = "Operação de Aquisição sem Direito a Crédito",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("fd4b01a8-6004-464b-9669-17bac490d0e9"),
                            Codigo = "71",
                            Descricao = "Operação de Aquisição com Isenção",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("ba190994-8e03-4a54-a3a2-b52015f57916"),
                            Codigo = "72",
                            Descricao = "Operação de Aquisição com Suspensão",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("d8c0faa3-c2e9-4276-9c0d-96e4935fbf37"),
                            Codigo = "73",
                            Descricao = "Operação de Aquisição a Alíquota Zero",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("067a178f-c4ac-4b97-a295-e649cee16504"),
                            Codigo = "74",
                            Descricao = "Operação de Aquisição sem Incidência da Contribuição",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("fe29b6e2-5f43-471c-8ff1-d35386cb24fc"),
                            Codigo = "75",
                            Descricao = "Operação de Aquisição por Substituição Tributária",
                            DestacarPIS_COFINS = false,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("aabf2def-1afa-44f6-8e16-01716f2b2cf0"),
                            Codigo = "98",
                            Descricao = "Outras Operações de Entrada",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = false
                        },
                        new
                        {
                            Id = new Guid("3aab7950-67bf-4e08-97e8-ac85b440091e"),
                            Codigo = "99",
                            Descricao = "Outras Operações",
                            DestacarPIS_COFINS = true,
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            UsaNaEntrada = true,
                            UsaNaSaida = true
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaClasseEnquadramentoIPI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(5)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaClasseEnquadramentoIPIs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCodigoEnquadramentoIPI", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(3)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("GrupoTabelaCodigoEnquadramentoIPI")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaCodigoEnquadramentoIPIs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaModalidadeDeterminacaoBCICMS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<int>("TipoModalidadeDeterminacaoBCICMS")
                        .HasColumnType("int");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaModalidadeDeterminacaoBCICMSs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaMotivoDesoneracaoICMS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("TabelaCST_CSOSNId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TabelaCST_CSOSNId");

                    b.ToTable("TabelaMotivoDesoneracaoICMSs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaNCM", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<Guid>("GrupoNCMId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GrupoNCMId");

                    b.ToTable("TabelaNCMs");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaNaturezaReceita_CTS_PIS_COFINS", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Descricao")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("GrupoNaturezaReceita_CTS_PIS_COFINSId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("GrupoNaturezaReceita_CTS_PIS_COFINSId");

                    b.ToTable("TabelaNaturezaReceita_CTS_PIS_COFINS");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaOrigemMercadoriaServico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaOrigemMercadoriaServicos");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaSituacaoTributariaNFCe", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("char(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaSituacaoTributariaNFCes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c53efb17-c0e8-4b77-8adf-6a84e712b1af"),
                            Codigo = "01",
                            Descricao = "Normal(% TRIBUTADO)",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6aea67de-fb91-4afd-97cb-6373c2844acc"),
                            Codigo = "FF",
                            Descricao = "Substituição",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("723e08dd-e36a-4542-9143-14b678991263"),
                            Codigo = "II",
                            Descricao = "Isento",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ba820c12-eb1d-4c76-9b39-9b23ce344222"),
                            Codigo = "NN",
                            Descricao = "Não Incidente",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaSpedCodigoGenero", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaSpedCodigoGeneros");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaSpedInformacaoAdicionalItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(8)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaSpedInformacaoAdicionalItens");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaSpedTipoItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(2)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(500)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TabelaSpedTipoItems");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TipoMercadoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TipoMercadorias");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c585cae1-1e59-4230-b6e4-ec6be789a038"),
                            Nome = "VEÍCULO",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1c0edc94-6bad-4ecc-a574-09079a27e594"),
                            Nome = "COMBUSTÍVEL",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("81be89af-18fd-4b66-9b56-e3760aa78459"),
                            Nome = "MEDICAMENTO",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("80d06387-7d47-4061-8ed0-b446c914026f"),
                            Nome = "ARMAMENTO",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TipoServicoFiscal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("TabelaCNAEId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TabelaCNAEId");

                    b.ToTable("TipoServicoFiscais");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.UnidadeMedida", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UnidadeMedidas");

                    b.HasData(
                        new
                        {
                            Id = new Guid("151ab54e-2001-4b93-8c6d-67b3f8a6aacd"),
                            Codigo = "UND",
                            Nome = "Unidade",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("9b835b25-a62a-4ab5-aaa2-7b78a63aab74"),
                            Codigo = "CXA",
                            Nome = "Caixa",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e60e19b4-2e48-4411-914c-f0d2549b5627"),
                            Codigo = "PCA",
                            Nome = "Peca",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("c9fa9eee-87c9-483d-b058-6fe87ac742c5"),
                            Codigo = "MTR",
                            Nome = "Metro",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("6a23d044-473f-4368-b4da-df37200dc203"),
                            Codigo = "KG",
                            Nome = "Kilograma",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d71ea258-a580-4238-ab91-3d67a9b4e9e7"),
                            Codigo = "LTR",
                            Nome = "Litro ",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0ae878fa-5373-49d8-b47d-d18178c58f72"),
                            Codigo = "PCT",
                            Nome = "Pacote",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("3a6ea3c3-2215-4ef0-a649-719372e0ada3"),
                            Codigo = "SCO",
                            Nome = "Saco",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("50f54727-42fe-4830-ac7c-db5bde27b72a"),
                            Codigo = "FRC",
                            Nome = "Frasco",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("f9820688-ba90-4a07-be82-b03f0b8a4dbc"),
                            Codigo = "GR",
                            Nome = "Grama",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("ac893d32-f53c-4482-86d3-77b8587d9525"),
                            Codigo = "FRD",
                            Nome = "Fardo",
                            UltimaAtualizacao = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.VinculoFiscal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("UltimaAtualizacao")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("VinculoFiscais");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Cidade", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Empresa", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Cidade", "End_Cidade")
                        .WithMany()
                        .HasForeignKey("End_CidadeId");

                    b.Navigation("End_Cidade");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Estado", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Estoque", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Almoxarifado", "Almoxarifado")
                        .WithMany()
                        .HasForeignKey("AlmoxarifadoId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.Mercadoria", "Mercadoria")
                        .WithMany()
                        .HasForeignKey("MercadoriaId")
                        .IsRequired();

                    b.Navigation("Almoxarifado");

                    b.Navigation("Mercadoria");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Mercadoria", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.TabelaCFOP", "Estoque_TributacaoNFCe_TabelaCFOP")
                        .WithMany()
                        .HasForeignKey("Estoque_TributacaoNFCe_TabelaCFOPId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaSituacaoTributariaNFCe", "Estoque_TributacaoNFCe_TabelaSituacaoTributariaNFCe")
                        .WithMany()
                        .HasForeignKey("Estoque_TributacaoNFCe_TabelaSituacaoTributariaNFCeId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TipoServicoFiscal", "Estoque_TributacaoNFCe_TipoServicoFiscal")
                        .WithMany()
                        .HasForeignKey("Estoque_TributacaoNFCe_TipoServicoFiscalId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.UnidadeMedida", "Estoque_Unidade")
                        .WithMany()
                        .HasForeignKey("Estoque_UnidadeId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.Pessoa", "Fabricante")
                        .WithMany()
                        .HasForeignKey("FabricanteId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_PIS_COFINS", "Fiscal_NFE_TabelaCST_COFINS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFE_TabelaCST_COFINSId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_IPI", "Fiscal_NFE_TabelaCST_IPI")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFE_TabelaCST_IPIId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_PIS_COFINS", "Fiscal_NFE_TabelaCST_PIS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFE_TabelaCST_PISId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaModalidadeDeterminacaoBCICMS", "Fiscal_NFS_ICMSST_TabelaModalidadeDeterminacaoBCICMS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_ICMSST_TabelaModalidadeDeterminacaoBCICMSId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaModalidadeDeterminacaoBCICMS", "Fiscal_NFS_ICMS_TabelaModalidadeDeterminacaoBCICMS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_ICMS_TabelaModalidadeDeterminacaoBCICMSId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaMotivoDesoneracaoICMS", "Fiscal_NFS_ICMS_TabelaMotivoDesoneracaoICMS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_ICMS_TabelaMotivoDesoneracaoICMSId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_IPI", "Fiscal_NFS_IPI_TabelaCST_IPI")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_IPI_TabelaCST_IPIId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaClasseEnquadramentoIPI", "Fiscal_NFS_IPI_TabelaClasseEnquadramentoIPI")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_IPI_TabelaClasseEnquadramentoIPIId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCodigoEnquadramentoIPI", "Fiscal_NFS_IPI_TabelaCodigoEnquadramentoIPI")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_IPI_TabelaCodigoEnquadramentoIPIId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.GrupoNaturezaReceita_CTS_PIS_COFINS", "Fiscal_NFS_PISCOFINS_GrupoNaturezaReceita")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_PISCOFINS_GrupoNaturezaReceitaId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_PIS_COFINS", "Fiscal_NFS_PISCOFINS_PIS_TabelaCSTCOFINS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTCOFINSId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_PIS_COFINS", "Fiscal_NFS_PISCOFINS_PIS_TabelaCSTPIS")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTPISId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaNaturezaReceita_CTS_PIS_COFINS", "Fiscal_NFS_PISCOFINS_TabelaNaturezaReceita")
                        .WithMany()
                        .HasForeignKey("Fiscal_NFS_PISCOFINS_TabelaNaturezaReceitaId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaSpedCodigoGenero", "Fiscal_SPED_TabelaSpedCodigoGenero")
                        .WithMany()
                        .HasForeignKey("Fiscal_SPED_TabelaSpedCodigoGeneroId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaSpedInformacaoAdicionalItem", "Fiscal_SPED_TabelaSpedInformacaoAdicionalItem")
                        .WithMany()
                        .HasForeignKey("Fiscal_SPED_TabelaSpedInformacaoAdicionalItemId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaSpedTipoItem", "Fiscal_SPED_TabelaSpedTipoItem")
                        .WithMany()
                        .HasForeignKey("Fiscal_SPED_TabelaSpedTipoItemId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaANP", "Fiscal_TabelaANP")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaANPId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaBeneficioSPED", "Fiscal_TabelaBeneficioSPED")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaBeneficioSPEDId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCEST", "Fiscal_TabelaCEST")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaCESTId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_CSOSN", "Fiscal_TabelaCST_CSOSN")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaCST_CSOSNId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaNCM", "Fiscal_TabelaNCM")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaNCMId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TabelaOrigemMercadoriaServico", "Fiscal_TabelaOrigemMercadoriaServico")
                        .WithMany()
                        .HasForeignKey("Fiscal_TabelaOrigemMercadoriaServicoId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.TipoMercadoria", "Fiscal_TipoMercadoria")
                        .WithMany()
                        .HasForeignKey("Fiscal_TipoMercadoriaId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.VinculoFiscal", "Fiscal_VinculoFiscal")
                        .WithMany()
                        .HasForeignKey("Fiscal_VinculoFiscalId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.Pessoa", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.GrupoMercadoria", "GrupoMercadoria")
                        .WithMany()
                        .HasForeignKey("GrupoMercadoriaId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.SubGrupoMercadoria", "SubGrupoMercadoria")
                        .WithMany()
                        .HasForeignKey("SubGrupoMercadoriaId")
                        .IsRequired();

                    b.Navigation("Estoque_TributacaoNFCe_TabelaCFOP");

                    b.Navigation("Estoque_TributacaoNFCe_TabelaSituacaoTributariaNFCe");

                    b.Navigation("Estoque_TributacaoNFCe_TipoServicoFiscal");

                    b.Navigation("Estoque_Unidade");

                    b.Navigation("Fabricante");

                    b.Navigation("Fiscal_NFE_TabelaCST_COFINS");

                    b.Navigation("Fiscal_NFE_TabelaCST_IPI");

                    b.Navigation("Fiscal_NFE_TabelaCST_PIS");

                    b.Navigation("Fiscal_NFS_ICMS_TabelaModalidadeDeterminacaoBCICMS");

                    b.Navigation("Fiscal_NFS_ICMS_TabelaMotivoDesoneracaoICMS");

                    b.Navigation("Fiscal_NFS_ICMSST_TabelaModalidadeDeterminacaoBCICMS");

                    b.Navigation("Fiscal_NFS_IPI_TabelaClasseEnquadramentoIPI");

                    b.Navigation("Fiscal_NFS_IPI_TabelaCodigoEnquadramentoIPI");

                    b.Navigation("Fiscal_NFS_IPI_TabelaCST_IPI");

                    b.Navigation("Fiscal_NFS_PISCOFINS_GrupoNaturezaReceita");

                    b.Navigation("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTCOFINS");

                    b.Navigation("Fiscal_NFS_PISCOFINS_PIS_TabelaCSTPIS");

                    b.Navigation("Fiscal_NFS_PISCOFINS_TabelaNaturezaReceita");

                    b.Navigation("Fiscal_SPED_TabelaSpedCodigoGenero");

                    b.Navigation("Fiscal_SPED_TabelaSpedInformacaoAdicionalItem");

                    b.Navigation("Fiscal_SPED_TabelaSpedTipoItem");

                    b.Navigation("Fiscal_TabelaANP");

                    b.Navigation("Fiscal_TabelaBeneficioSPED");

                    b.Navigation("Fiscal_TabelaCEST");

                    b.Navigation("Fiscal_TabelaCST_CSOSN");

                    b.Navigation("Fiscal_TabelaNCM");

                    b.Navigation("Fiscal_TabelaOrigemMercadoriaServico");

                    b.Navigation("Fiscal_TipoMercadoria");

                    b.Navigation("Fiscal_VinculoFiscal");

                    b.Navigation("Fornecedor");

                    b.Navigation("GrupoMercadoria");

                    b.Navigation("SubGrupoMercadoria");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.MercadoriaFornecedor", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Pessoa", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorId")
                        .IsRequired();

                    b.HasOne("SisCom.Entidade.Modelos.Mercadoria", "Mercadoria")
                        .WithMany()
                        .HasForeignKey("MercadoriaId")
                        .IsRequired();

                    b.Navigation("Fornecedor");

                    b.Navigation("Mercadoria");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.Pessoa", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.Cidade", "End_Cidade")
                        .WithMany()
                        .HasForeignKey("End_CidadeId");

                    b.Navigation("End_Cidade");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.SubGrupoMercadoria", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.GrupoMercadoria", "GrupoMercadoria")
                        .WithMany()
                        .HasForeignKey("GrupoMercadoriaId")
                        .IsRequired();

                    b.Navigation("GrupoMercadoria");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCEST", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.TabelaNCM", "TabelaNCM")
                        .WithMany()
                        .HasForeignKey("TabelaNCMId")
                        .IsRequired();

                    b.Navigation("TabelaNCM");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaCFOP", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.GrupoCFOP", "GrupoCFOP")
                        .WithMany()
                        .HasForeignKey("GrupoCFOPId")
                        .IsRequired();

                    b.Navigation("GrupoCFOP");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaMotivoDesoneracaoICMS", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.TabelaCST_CSOSN", "TabelaCST_CSOSN")
                        .WithMany()
                        .HasForeignKey("TabelaCST_CSOSNId")
                        .IsRequired();

                    b.Navigation("TabelaCST_CSOSN");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaNCM", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.GrupoNCM", "GrupoNCM")
                        .WithMany()
                        .HasForeignKey("GrupoNCMId")
                        .IsRequired();

                    b.Navigation("GrupoNCM");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TabelaNaturezaReceita_CTS_PIS_COFINS", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.GrupoNaturezaReceita_CTS_PIS_COFINS", "GrupoNaturezaReceita_CTS_PIS_COFINS")
                        .WithMany()
                        .HasForeignKey("GrupoNaturezaReceita_CTS_PIS_COFINSId")
                        .IsRequired();

                    b.Navigation("GrupoNaturezaReceita_CTS_PIS_COFINS");
                });

            modelBuilder.Entity("SisCom.Entidade.Modelos.TipoServicoFiscal", b =>
                {
                    b.HasOne("SisCom.Entidade.Modelos.TabelaCNAE", "TabelaCNAE")
                        .WithMany()
                        .HasForeignKey("TabelaCNAEId")
                        .IsRequired();

                    b.Navigation("TabelaCNAE");
                });
#pragma warning restore 612, 618
        }
    }
}
